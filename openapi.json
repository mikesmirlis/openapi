{
  "openapi": "3.0.1",
  "info": {
    "title": "AssuranceTool REST API Specification",
    "description": "Sphynx Assurance Tool",
    "termsOfService": "http://swagger.io/terms/",
    "license": {
      "name": "Apache 2.0",
      "url": "http://springdoc.org"
    }
  },
  "servers": [
    {
      "url": "https://threat-arrest.org:58443/assurancetool",
      "description": "Generated server url"
    }
  ],
  "security": [
    {
      "bearer-jwt": [
        "read",
        "write"
      ]
    }
  ],
  "paths": {
    "/rest/api/grammar/training-scenarios/{trainingScenarioId}": {
      "post": {
        "tags": [
          "cttp-language-base-listener-impl"
        ],
        "summary": "Batch insert of assets based on the assurance grammar",
        "operationId": "parseGrammar",
        "parameters": [
          {
            "name": "trainingScenarioId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Assets inserted",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "No attached file"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/status-types": {
      "get": {
        "tags": [
          "main-gui-controller"
        ],
        "summary": "Get the status types",
        "operationId": "getSoftwareStatus",
        "responses": {
          "200": {
            "description": "Status types retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusType"
                }
              }
            }
          },
          "404": {
            "description": "No status types found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/status-types/{statusId}": {
      "get": {
        "tags": [
          "main-gui-controller"
        ],
        "summary": "Get a status type by its id",
        "operationId": "getSoftwareStatus_1",
        "parameters": [
          {
            "name": "statusId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status type retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusType"
                }
              }
            }
          },
          "404": {
            "description": "No status type found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/adaptation/alerts/min/{min}/max/{max}": {
      "get": {
        "tags": [
          "alert-controller"
        ],
        "summary": "Get all alerts",
        "operationId": "getAlerts",
        "parameters": [
          {
            "name": "min",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "max",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Alerts retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alert"
                }
              }
            }
          },
          "404": {
            "description": "No alerts found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/adaptation/alerts": {
      "put": {
        "tags": [
          "alert-controller"
        ],
        "summary": "Update alert if resolved",
        "operationId": "updatedResolvedAlert",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Alert"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Alert updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alert"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/adaptation/alerts/resolved/min/{min}/max/{max}": {
      "get": {
        "tags": [
          "alert-controller"
        ],
        "summary": "Get all resolved alerts",
        "operationId": "getResolvedAlerts",
        "parameters": [
          {
            "name": "min",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "max",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Alerts retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alert"
                }
              }
            }
          },
          "404": {
            "description": "No alerts found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/adaptation/alerts/unresolved/min/{min}/max/{max}": {
      "get": {
        "tags": [
          "alert-controller"
        ],
        "summary": "Get all unresolved alerts",
        "operationId": "getUnresolvedAlerts",
        "parameters": [
          {
            "name": "min",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "max",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Alerts retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alert"
                }
              }
            }
          },
          "404": {
            "description": "No alerts found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/adaptation/notifications": {
      "put": {
        "tags": [
          "notification-controller"
        ],
        "summary": "Update notification if read",
        "operationId": "updateReadNotification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Notification"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Notifications retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          },
          "404": {
            "description": "No Notifications found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/adaptation/notifications/read/min/{min}/max/{max}": {
      "get": {
        "tags": [
          "notification-controller"
        ],
        "summary": "Get all read notifications",
        "operationId": "getReadNotifications",
        "parameters": [
          {
            "name": "min",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "max",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notification retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          },
          "404": {
            "description": "No Notification found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/adaptation/notifications/unresolved/min/{min}/max/{max}": {
      "get": {
        "tags": [
          "notification-controller"
        ],
        "summary": "Get all unread notifications",
        "operationId": "getUnreadNotifications",
        "parameters": [
          {
            "name": "min",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "max",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notification retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          },
          "404": {
            "description": "No Notification found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/adaptation/notifications/min/{min}/max/{max}": {
      "get": {
        "tags": [
          "notification-controller"
        ],
        "summary": "Get all notifications",
        "operationId": "getNotifications",
        "parameters": [
          {
            "name": "min",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "max",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notifications retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          },
          "404": {
            "description": "No Notifications found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assessments/types/{typeId}": {
      "get": {
        "tags": [
          "assessment-rest-controller"
        ],
        "summary": "Get an assessment type by its id",
        "operationId": "searchTypesPerID",
        "parameters": [
          {
            "name": "typeId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Assessment Type found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentType"
                }
              }
            }
          },
          "404": {
            "description": "Assessment type not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assessments/monitoring": {
      "get": {
        "tags": [
          "assessment-rest-controller"
        ],
        "summary": "Get all monitoring assessment results",
        "operationId": "getMonitoringAssessment",
        "responses": {
          "200": {
            "description": "Monitoring assessment results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonitoringAssessmentResult"
                }
              }
            }
          },
          "204": {
            "description": "Collection is empty"
          },
          "404": {
            "description": "No monitoring assessment results found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assessments/monitoring/training-scenarios": {
      "get": {
        "tags": [
          "assessment-rest-controller"
        ],
        "summary": "Get monitoring assessment results per trainingScenarioId",
        "operationId": "getMonitoringAssessmentByPID",
        "parameters": [
          {
            "name": "tsId",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Monitoring assessment results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonitoringAssessmentResult"
                }
              }
            }
          },
          "204": {
            "description": "Collection is empty"
          },
          "404": {
            "description": "No monitoring assessment results found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assessments/{assessmentId}/monitoring/training-scenarios": {
      "get": {
        "tags": [
          "assessment-rest-controller"
        ],
        "summary": "Get monitoring assessment results per trainingScenarioId and assessmentId",
        "operationId": "getMonitoringAssessmentByAPID",
        "parameters": [
          {
            "name": "tsId",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "assessmentId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Monitoring assessment results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonitoringAssessmentResult"
                }
              }
            }
          },
          "204": {
            "description": "Collection is empty"
          },
          "404": {
            "description": "No monitoring assessment results found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assessments/{assessmentModelExecutionId}/monitoring": {
      "get": {
        "tags": [
          "assessment-rest-controller"
        ],
        "summary": "Get monitoring assessment results assessmentModelExecutionID",
        "operationId": "getMonitoringAssessmentByID",
        "parameters": [
          {
            "name": "assessmentModelExecutionId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Monitoring assessment results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonitoringAssessmentResultsFields"
                }
              }
            }
          },
          "204": {
            "description": "Collection is empty"
          },
          "404": {
            "description": "No monitoring assessment results found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assessments/results": {
      "get": {
        "tags": [
          "assessment-rest-controller"
        ],
        "summary": "Get assessment results",
        "operationId": "getAssessmentResults",
        "responses": {
          "200": {
            "description": "Assessment results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentProfile"
                }
              }
            }
          },
          "404": {
            "description": "No assessment results found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assessments/results/page/{start}/{end}": {
      "get": {
        "tags": [
          "assessment-rest-controller"
        ],
        "summary": "Get assessment results",
        "operationId": "getAssessmentResults_1",
        "parameters": [
          {
            "name": "start",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "end",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Assessment results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentProfile"
                }
              }
            }
          },
          "404": {
            "description": "No assessment results found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assessments/criteria": {
      "get": {
        "tags": [
          "assessment-rest-controller"
        ],
        "summary": "Get assessment criteria",
        "operationId": "getAssessmentCriteria",
        "responses": {
          "200": {
            "description": "Assessment criteria found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentCriterion"
                }
              }
            }
          },
          "404": {
            "description": "No assessment criteria found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assessments/model-executions/{assessmentModelExecutionID}/involved-assets": {
      "get": {
        "tags": [
          "assessment-rest-controller"
        ],
        "summary": "Get the involved assets per assessment model execution ",
        "operationId": "getInvolvedAssets",
        "parameters": [
          {
            "name": "assessmentModelExecutionID",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Assessment Model Executions found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assets"
                }
              }
            }
          },
          "404": {
            "description": "No involved assets found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assessments/execution-types/models": {
      "get": {
        "tags": [
          "assessment-rest-controller"
        ],
        "summary": "Get assessment execution types per assessmentModelId",
        "operationId": "getExecutionType",
        "parameters": [
          {
            "name": "modelId",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Assessment profiles found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionAssessmentJoin"
                }
              }
            }
          },
          "404": {
            "description": "No assessment profiles found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assessments/types": {
      "get": {
        "tags": [
          "assessment-rest-controller"
        ],
        "summary": "Get all assessment types",
        "operationId": "getAssessmentModelTypes",
        "responses": {
          "200": {
            "description": "Assessment Type found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentType"
                }
              }
            }
          },
          "204": {
            "description": "Collection is empty"
          },
          "404": {
            "description": "Assessment types doesn't exist"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assessments/aggregated/training-scenarios": {
      "get": {
        "tags": [
          "assessment-rest-controller"
        ],
        "summary": "Get all assessments per trainingScenario",
        "operationId": "getAggregatedAssessments",
        "parameters": [
          {
            "name": "tsId",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Assessment(s) found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityAssessmentAggregated"
                }
              }
            }
          },
          "204": {
            "description": "Collection is empty"
          },
          "404": {
            "description": "Assessment doesn't exist"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assessments/model-executions": {
      "get": {
        "tags": [
          "assessment-rest-controller"
        ],
        "summary": "Get assessment model executions",
        "operationId": "getAssessmentModelExecutions",
        "responses": {
          "200": {
            "description": "Assessment Model Executions found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentModelExecution"
                }
              }
            }
          },
          "204": {
            "description": "Collection is empty"
          },
          "404": {
            "description": "Assessment Model Execution doesn't exist"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assessments/model-executions/{modelId}": {
      "get": {
        "tags": [
          "assessment-rest-controller"
        ],
        "summary": "Get assessment model execution per id",
        "operationId": "getModelExecutionsPerID",
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Assessment Model Execution found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentModelExecution"
                }
              }
            }
          },
          "404": {
            "description": "Assessment model doesn't exist"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assessments/model-executions/users": {
      "get": {
        "tags": [
          "assessment-rest-controller"
        ],
        "summary": "Get assessment model executions per userId",
        "operationId": "getModelExecutionsPerUserID",
        "parameters": [
          {
            "name": "userID",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Assessment Model Executions found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentModelExecution"
                }
              }
            }
          },
          "204": {
            "description": "Collection is empty"
          },
          "404": {
            "description": "No assessment model executions found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assessments/model-executions/training-scenarios": {
      "get": {
        "tags": [
          "assessment-rest-controller"
        ],
        "summary": "Get assessment model executions per training scenario ",
        "operationId": "getModelExecutionsPerProjectID",
        "parameters": [
          {
            "name": "tsId",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Assessment Model Executions found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentModelExecution"
                }
              }
            }
          },
          "404": {
            "description": "No assessment model executions found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assessments/models": {
      "get": {
        "tags": [
          "assessment-rest-controller"
        ],
        "summary": "Get assessment models",
        "operationId": "getAssessmentModels",
        "responses": {
          "200": {
            "description": "Assessment Models found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentModelExecution"
                }
              }
            }
          },
          "204": {
            "description": "Collection is empty"
          },
          "404": {
            "description": "No assessment models found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assessments/models/{modelId}": {
      "get": {
        "tags": [
          "assessment-rest-controller"
        ],
        "summary": "Get assessment model per modelId",
        "operationId": "getModelsPerID",
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Assessment Model found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentModel"
                }
              }
            }
          },
          "404": {
            "description": "No assessment model found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assessments/profiles": {
      "get": {
        "tags": [
          "assessment-rest-controller"
        ],
        "summary": "Get assessment profiles",
        "operationId": "getAssessmentProfiles",
        "responses": {
          "200": {
            "description": "Assessment profiles found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentProfile"
                }
              }
            }
          },
          "404": {
            "description": "No assessment profiles found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assessments/results/training-scenarios": {
      "get": {
        "tags": [
          "assessment-rest-controller"
        ],
        "summary": "Get assessment results by trainingScenarioId",
        "operationId": "getAssessmentResultByTsID",
        "parameters": [
          {
            "name": "tsId",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Assessment results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentProfile"
                }
              }
            }
          },
          "404": {
            "description": "No assessment results found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assessments/model-executions/{assessmentModelExecutionID}/results": {
      "get": {
        "tags": [
          "assessment-rest-controller"
        ],
        "summary": "Get assessment results by modelExecutionId",
        "operationId": "getAssessmentResultByModelExecutionID",
        "parameters": [
          {
            "name": "assessmentModelExecutionID",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Assessment results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentProfile"
                }
              }
            }
          },
          "404": {
            "description": "No assessment results found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assessments/profiles/models": {
      "get": {
        "tags": [
          "assessment-rest-controller"
        ],
        "summary": "Get assessment profiles per assessmentModelId",
        "operationId": "getAssessmentProfilesById",
        "parameters": [
          {
            "name": "modelId",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Assessment profiles found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentProfile"
                }
              }
            }
          },
          "404": {
            "description": "No assessment profiles found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assessments/{assessmentModelExecutionId}/involved-assets": {
      "get": {
        "tags": [
          "assessment-rest-controller"
        ],
        "summary": "Get Involved assets per assessmentModelExecutionID",
        "operationId": "countInvolvedAssets",
        "parameters": [
          {
            "name": "assessmentModelExecutionId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Involved assets found",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/rest/api/assessments/{assessmentId}/monitoring/findings/training-scenarios": {
      "get": {
        "tags": [
          "assessment-rest-controller"
        ],
        "operationId": "countFindings",
        "parameters": [
          {
            "name": "assessmentId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "tsId",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/rest/api/assessments/monitoring/fields/training-scenarios": {
      "get": {
        "tags": [
          "assessment-rest-controller"
        ],
        "summary": "Get monitoring assessment results fields",
        "operationId": "getFields",
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Monitoring assessment results found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonitoringAssessmentResult"
                }
              }
            }
          },
          "204": {
            "description": "Collection is empty"
          },
          "404": {
            "description": "No monitoring assessment results found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assets/main-view/training-scenarios": {
      "get": {
        "tags": [
          "asset-controller"
        ],
        "summary": "Get aggregated asset information",
        "operationId": "getAssets",
        "parameters": [
          {
            "name": "trainingScenarioId",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Assets found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assets"
                }
              }
            }
          },
          "404": {
            "description": "Assets not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assets": {
      "get": {
        "tags": [
          "asset-controller"
        ],
        "summary": "Get all assets",
        "operationId": "getAssets_1",
        "responses": {
          "200": {
            "description": "Assets found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            }
          },
          "404": {
            "description": "Assets not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assets/{assetID}": {
      "get": {
        "tags": [
          "asset-controller"
        ],
        "summary": "Get an asset by assetId",
        "operationId": "getAssetByAssetID",
        "parameters": [
          {
            "name": "assetID",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Asset found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            }
          },
          "404": {
            "description": "Asset not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assets/training-scenarios": {
      "get": {
        "tags": [
          "asset-controller"
        ],
        "summary": "Get all assets by training scenario",
        "operationId": "getAssetByTrainingScenarioID",
        "parameters": [
          {
            "name": "trainingScenarioId",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Assets found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            }
          },
          "404": {
            "description": "Assets not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assets/main/training-scenarios": {
      "get": {
        "tags": [
          "asset-controller"
        ],
        "summary": "Get all assets by training  (new)",
        "operationId": "getAssetByTrainingScenarioIDNew",
        "parameters": [
          {
            "name": "trainingScenarioId",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Assets found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            }
          },
          "404": {
            "description": "Assets not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assets/{assetId}/training-scenarios": {
      "get": {
        "tags": [
          "asset-controller"
        ],
        "summary": "Get all assets by training scenario except self",
        "operationId": "getAssetByTrainingScenarioIDExceptSelf",
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "trainingScenarioId",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Assets found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            }
          },
          "404": {
            "description": "Assets not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assets/{assetId}/name": {
      "get": {
        "tags": [
          "asset-controller"
        ],
        "summary": "Get asset's name",
        "operationId": "getAssetNames",
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Asset found",
            "content": {
              "text/html; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Assets not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assets/types": {
      "get": {
        "tags": [
          "asset-controller"
        ],
        "summary": "Get all asset types",
        "operationId": "getAssetTypes",
        "responses": {
          "200": {
            "description": "Asset types found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetType"
                }
              }
            }
          },
          "404": {
            "description": "Asset types not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assets/{assetId}/types": {
      "get": {
        "tags": [
          "asset-controller"
        ],
        "summary": "Get asset type by assetId",
        "operationId": "getTypeByAssetID",
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Asset type found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetType"
                }
              }
            }
          },
          "404": {
            "description": "Asset type not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assets/aggregated/training-scenarios": {
      "get": {
        "tags": [
          "asset-controller"
        ],
        "summary": "Get aggregated information for the Asset class",
        "operationId": "getAggregated",
        "parameters": [
          {
            "name": "trainingScenarioId",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Assets found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetAggregated"
                }
              }
            }
          },
          "404": {
            "description": "Assets not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assets/supports": {
      "delete": {
        "tags": [
          "asset-controller"
        ],
        "summary": "Delete a support relation",
        "operationId": "removeSupport",
        "parameters": [
          {
            "name": "supportId",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Support relation deleted",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assets/involves": {
      "delete": {
        "tags": [
          "asset-controller"
        ],
        "summary": "Delete an involves relation",
        "operationId": "removeInvolves",
        "parameters": [
          {
            "name": "involvesId",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Involves relation deleted",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assets/depends": {
      "delete": {
        "tags": [
          "asset-controller"
        ],
        "summary": "Delete a depends relation",
        "operationId": "removeDepends",
        "parameters": [
          {
            "name": "dependId",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Support relation deleted",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assets/containment": {
      "delete": {
        "tags": [
          "asset-controller"
        ],
        "summary": "Delete a containment relation",
        "operationId": "removeContainment",
        "parameters": [
          {
            "name": "containmentId",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Containment relation deleted",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assets/control": {
      "delete": {
        "tags": [
          "asset-controller"
        ],
        "summary": "Delete a control relation",
        "operationId": "removeControls",
        "parameters": [
          {
            "name": "controlsId",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Control relation deleted",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assets/transmit": {
      "delete": {
        "tags": [
          "asset-controller"
        ],
        "summary": "Delete a transmit relation",
        "operationId": "removeTransmits",
        "parameters": [
          {
            "name": "transmitsId",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transmit relation deleted",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assets/process": {
      "delete": {
        "tags": [
          "asset-controller"
        ],
        "summary": "Delete a process relation",
        "operationId": "removeProcesses",
        "parameters": [
          {
            "name": "processesId",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Process relation deleted",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assets/store": {
      "delete": {
        "tags": [
          "asset-controller"
        ],
        "summary": "Delete a store relation",
        "operationId": "removeStores",
        "parameters": [
          {
            "name": "storesId",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Store relation deleted",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assets/deploy": {
      "delete": {
        "tags": [
          "asset-controller"
        ],
        "summary": "Delete a deploy relation",
        "operationId": "removeDeploys",
        "parameters": [
          {
            "name": "deployId",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deploy relation deleted",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/assets/main-view/aggregated": {
      "get": {
        "tags": [
          "asset-controller"
        ],
        "summary": "Get all aggregated asset information",
        "operationId": "getAllAssets",
        "responses": {
          "200": {
            "description": "Assets found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assets"
                }
              }
            }
          },
          "404": {
            "description": "Assets not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/currencies": {
      "get": {
        "tags": [
          "currency-rest-contoller"
        ],
        "summary": "Get all currency types",
        "operationId": "getCurrencies",
        "responses": {
          "200": {
            "description": "Currency types found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyType"
                }
              }
            }
          },
          "404": {
            "description": "Currency types not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/currencies/{currencyId}": {
      "get": {
        "tags": [
          "currency-rest-contoller"
        ],
        "summary": "Get currency type by typeId",
        "operationId": "getCurrenciesByID",
        "parameters": [
          {
            "name": "currencyId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Currency type found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyType"
                }
              }
            }
          },
          "404": {
            "description": "Currency type not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/data": {
      "get": {
        "tags": [
          "data-rest-controller"
        ],
        "summary": "Get all data assets",
        "operationId": "getData",
        "responses": {
          "200": {
            "description": "Data  assets retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Data"
                }
              }
            }
          },
          "404": {
            "description": "No data assets found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      },
      "put": {
        "tags": [
          "data-rest-controller"
        ],
        "summary": "Update a valid data asset",
        "operationId": "update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Data asset was successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Data"
                }
              }
            }
          },
          "404": {
            "description": "Data asset not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      },
      "post": {
        "tags": [
          "data-rest-controller"
        ],
        "summary": "Insert a valid data asset",
        "operationId": "insert",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Data"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Data asset was successfully inserted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Data"
                }
              }
            }
          },
          "404": {
            "description": "Data asset cannot be empty"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/data/assets": {
      "get": {
        "tags": [
          "data-rest-controller"
        ],
        "summary": "Get data asset by assetId",
        "operationId": "getByAssetID",
        "parameters": [
          {
            "name": "assetId",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data  asset found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Data"
                }
              }
            }
          },
          "404": {
            "description": "No data asset found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/data/types": {
      "get": {
        "tags": [
          "data-rest-controller"
        ],
        "summary": "Get data types",
        "operationId": "getDataTypes",
        "responses": {
          "200": {
            "description": "Data  types found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataType"
                }
              }
            }
          },
          "404": {
            "description": "No data types found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/data/types/{dataTypeId}": {
      "get": {
        "tags": [
          "data-rest-controller"
        ],
        "summary": "Get data types by typeId",
        "operationId": "getDataTypesPerID",
        "parameters": [
          {
            "name": "dataTypeId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data  type found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataType"
                }
              }
            }
          },
          "404": {
            "description": "No data type found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/data/states": {
      "get": {
        "tags": [
          "data-rest-controller"
        ],
        "summary": "Get data states",
        "operationId": "getDataStates",
        "responses": {
          "200": {
            "description": "Data  states found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataStateType"
                }
              }
            }
          },
          "404": {
            "description": "No data states found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/data/states/{dataStateId}": {
      "get": {
        "tags": [
          "data-rest-controller"
        ],
        "summary": "Get data state by stateId",
        "operationId": "getDataStateByID",
        "parameters": [
          {
            "name": "dataStateId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data  state found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyType"
                }
              }
            }
          },
          "404": {
            "description": "No data state found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/data/actions": {
      "get": {
        "tags": [
          "data-rest-controller"
        ],
        "summary": "Get data actions",
        "operationId": "getDataActionTypeAll",
        "responses": {
          "200": {
            "description": "Data  actions found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataAction"
                }
              }
            }
          },
          "404": {
            "description": "No data actions found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/data/actions/{actionId}": {
      "get": {
        "tags": [
          "data-rest-controller"
        ],
        "summary": "Get data action by actionTypeId",
        "operationId": "getDataActionType",
        "parameters": [
          {
            "name": "actionId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data  action type found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyType"
                }
              }
            }
          },
          "404": {
            "description": "No data action type found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/data/gdpr-roles/{roleId}": {
      "get": {
        "tags": [
          "data-rest-controller"
        ],
        "summary": "Get GDPR role by roleId",
        "operationId": "getGDPRRoleType",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "GDPR Role found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GDPRRoleType"
                }
              }
            }
          },
          "404": {
            "description": "No data assets found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/data/gdpr-roles": {
      "get": {
        "tags": [
          "data-rest-controller"
        ],
        "summary": "Get GDPR roles",
        "operationId": "getGDPRRoleTypeAll",
        "responses": {
          "200": {
            "description": "Data  assets found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GDPRRoleType"
                }
              }
            }
          },
          "404": {
            "description": "No data assets found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/data/{dataId}/processors": {
      "delete": {
        "tags": [
          "data-rest-controller"
        ],
        "summary": "Delete a data processor",
        "operationId": "deleteProcessor",
        "parameters": [
          {
            "name": "dataId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Processor deleted"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/data/{dataId}": {
      "get": {
        "tags": [
          "data-rest-controller"
        ],
        "summary": "Get data assets",
        "operationId": "findByID",
        "parameters": [
          {
            "name": "dataId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data  assets found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Data"
                }
              }
            }
          },
          "404": {
            "description": "No data assets found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/data/{dataId}/training-scenarios/{tsId}": {
      "delete": {
        "tags": [
          "data-rest-controller"
        ],
        "summary": "Delete a data asset",
        "operationId": "delete",
        "parameters": [
          {
            "name": "dataId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "tsId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data asset deleted"
          },
          "404": {
            "description": "Data not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/data-fabrication": {
      "get": {
        "tags": [
          "cttp-data-fabrication-controller"
        ],
        "summary": "Get all DFPs",
        "operationId": "getDataFabricationModels",
        "responses": {
          "200": {
            "description": "DFPs found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTTPDataFabricationModel"
                }
              }
            }
          },
          "404": {
            "description": "No DFP found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      },
      "put": {
        "tags": [
          "cttp-data-fabrication-controller"
        ],
        "summary": "Update a valid data fabrication model",
        "operationId": "updateDataFabricationModel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CTTPDataFabricationModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "DFP was successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTTPDataFabricationModel"
                }
              }
            }
          },
          "404": {
            "description": "DFP cannot be empty"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      },
      "post": {
        "tags": [
          "cttp-data-fabrication-controller"
        ],
        "summary": "Insert a valid data fabrication model",
        "operationId": "addDataFabricationModel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CTTPDataFabricationModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "DFP was successfully inserted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTTPDataFabricationModel"
                }
              }
            }
          },
          "404": {
            "description": "DFP cannot be empty"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/data-fabrication/{dataFabricationId}": {
      "delete": {
        "tags": [
          "cttp-data-fabrication-controller"
        ],
        "summary": "Delete a Data Fabrication Model",
        "operationId": "deleteDataFabricationModel",
        "parameters": [
          {
            "name": "dataFabricationId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "DFP deleted"
          },
          "404": {
            "description": "DFP not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/data-fabrication/main-view": {
      "get": {
        "tags": [
          "cttp-data-fabrication-controller"
        ],
        "summary": "Get all DFPs (main-view)",
        "operationId": "getMainViewDataFabricationModels",
        "responses": {
          "200": {
            "description": "DFPs found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DFMainView"
                }
              }
            }
          },
          "404": {
            "description": "No DFP found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/data-fabrication/training-scenario/{tsId}/available": {
      "get": {
        "tags": [
          "cttp-data-fabrication-controller"
        ],
        "summary": "Get all available DFPs (tsId)",
        "operationId": "getAvailableDataFabricationModels",
        "parameters": [
          {
            "name": "tsId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "DFPs found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTTPDataFabricationModel"
                }
              }
            }
          },
          "404": {
            "description": "No DFP found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/data-fabrication/available": {
      "get": {
        "tags": [
          "cttp-data-fabrication-controller"
        ],
        "summary": "Get all available DFPs",
        "operationId": "getAllAvailableDataFabricationModels",
        "responses": {
          "200": {
            "description": "DFPs found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTTPDataFabricationModel"
                }
              }
            }
          },
          "404": {
            "description": "No DFP found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/data-fabrication/training-scenario": {
      "get": {
        "tags": [
          "cttp-data-fabrication-controller"
        ],
        "summary": "Get DFP by trainingScenarioId",
        "operationId": "getDataFabricationByTrainingScenario",
        "parameters": [
          {
            "name": "tsId",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "DFP found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTTPDataFabricationModel"
                }
              }
            }
          },
          "404": {
            "description": "No DFP found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/data-fabrication/single/training-scenario": {
      "get": {
        "tags": [
          "cttp-data-fabrication-controller"
        ],
        "summary": "Get a single DFP by trainingScenarioId",
        "operationId": "getDataFabricationOne",
        "parameters": [
          {
            "name": "tsId",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "DFP found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTTPDataFabricationModel"
                }
              }
            }
          },
          "404": {
            "description": "No DFP found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/data-fabrication/{dataFabricationID}": {
      "get": {
        "tags": [
          "cttp-data-fabrication-controller"
        ],
        "summary": "Get DFP by its id",
        "operationId": "getDataFabrication",
        "parameters": [
          {
            "name": "dataFabricationID",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "DFP found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTTPDataFabricationModel"
                }
              }
            }
          },
          "404": {
            "description": "No DFP found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/emulation": {
      "get": {
        "tags": [
          "cttp-emulation-controller"
        ],
        "summary": "Get all Emulation Models",
        "operationId": "getEmulations",
        "responses": {
          "200": {
            "description": "Emulation models found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTTPEmulationModel"
                }
              }
            }
          },
          "404": {
            "description": "No Emulation models found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      },
      "put": {
        "tags": [
          "cttp-emulation-controller"
        ],
        "summary": "Update a valid emulation model",
        "operationId": "updateEmulationModel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CTTPEmulationModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "DFP was successfully inserted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTTPEmulationModel"
                }
              }
            }
          },
          "404": {
            "description": "DFP cannot be empty"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      },
      "post": {
        "tags": [
          "cttp-emulation-controller"
        ],
        "summary": "Insert a valid emulation model",
        "operationId": "addEmulationModel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CTTPEmulationModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Emulation was successfully inserted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTTPEmulationModel"
                }
              }
            }
          },
          "404": {
            "description": "Emulation cannot be empty"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/emulation/{emulationModeId}": {
      "delete": {
        "tags": [
          "cttp-emulation-controller"
        ],
        "summary": "Delete an Emulation Model",
        "operationId": "deleteEmulationModel",
        "parameters": [
          {
            "name": "emulationModeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Emulation model deleted"
          },
          "404": {
            "description": "Emulation not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/emulation/custom-vm-names": {
      "get": {
        "tags": [
          "cttp-emulation-controller"
        ],
        "summary": "Get all Custom VM names",
        "operationId": "getEmulationNames",
        "responses": {
          "200": {
            "description": "Emulation models found"
          },
          "404": {
            "description": "No Emulation models found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/emulation/main-view": {
      "get": {
        "tags": [
          "cttp-emulation-controller"
        ],
        "summary": "Get all Emulation Models for main view",
        "operationId": "getEmulationsMainView",
        "responses": {
          "200": {
            "description": "Emulation models found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmulationMainView"
                }
              }
            }
          },
          "404": {
            "description": "No Emulation models found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/emulation/training-scenario/{tsId}/available": {
      "get": {
        "tags": [
          "cttp-emulation-controller"
        ],
        "summary": "Get all available Emulation Model (tsId)",
        "operationId": "getAvailableEmulations",
        "parameters": [
          {
            "name": "tsId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Emulation models found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTTPEmulationModel"
                }
              }
            }
          },
          "404": {
            "description": "No Emulation models found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/emulation/available": {
      "get": {
        "tags": [
          "cttp-emulation-controller"
        ],
        "summary": "Get all available Emulation Models",
        "operationId": "getAllAvailableEmulations",
        "responses": {
          "200": {
            "description": "Emulation models found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTTPEmulationModel"
                }
              }
            }
          },
          "404": {
            "description": "No Emulation models found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/emulation/training-scenario/{tsId}/xml": {
      "get": {
        "tags": [
          "cttp-emulation-controller"
        ],
        "summary": "Get an Emulation Model by trainingScenarioId (in an xml format)",
        "operationId": "getEmulationModelInXMLFormat",
        "parameters": [
          {
            "name": "tsId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Emulation model found",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CTTPEmulationModel"
                }
              }
            }
          },
          "404": {
            "description": "No Emulation model found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/emulation/{emulationID}/xml": {
      "get": {
        "tags": [
          "cttp-emulation-controller"
        ],
        "summary": "Get an Emulation Model by its id (in an xml format)",
        "operationId": "getXMLEmulation",
        "parameters": [
          {
            "name": "emulationID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Emulation model found",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CTTPEmulationModel"
                }
              }
            }
          },
          "404": {
            "description": "No Emulation model found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/emulation/training-scenario": {
      "get": {
        "tags": [
          "cttp-emulation-controller"
        ],
        "summary": "Get all Emulation Models by trainingScenarioId",
        "operationId": "getEmulationModel",
        "parameters": [
          {
            "name": "tsId",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Emulation model found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTTPEmulationModel"
                }
              }
            }
          },
          "404": {
            "description": "No Emulation model found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/emulation/single/training-scenario": {
      "get": {
        "tags": [
          "cttp-emulation-controller"
        ],
        "summary": "Get a single Emulation Model by trainingScenarioId",
        "operationId": "getSingleEmulationModel",
        "parameters": [
          {
            "name": "tsId",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Emulation model found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTTPEmulationModel"
                }
              }
            }
          },
          "404": {
            "description": "No Emulation model found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/emulation/{emulationId}": {
      "get": {
        "tags": [
          "cttp-emulation-controller"
        ],
        "summary": "Get an Emulation Model by its id",
        "operationId": "getEmulation",
        "parameters": [
          {
            "name": "emulationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Emulation model found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTTPEmulationModel"
                }
              }
            }
          },
          "404": {
            "description": "No Emulation model found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/emulation/per-operating-system/total": {
      "get": {
        "tags": [
          "cttp-emulation-controller"
        ],
        "summary": "Count Emulation Model by OS",
        "operationId": "getEmulationPerOS",
        "responses": {
          "200": {
            "description": "Emulation model found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmulationModelsPerOperatingSystem"
                }
              }
            }
          },
          "404": {
            "description": "No Emulation model found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/serious-game/awareness-quiz/mode/{aqmId}": {
      "get": {
        "tags": [
          "cttp-gamification-controller"
        ],
        "summary": "Get Awareness Quiz Mode",
        "operationId": "getAQMode",
        "parameters": [
          {
            "name": "aqmId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Awareness Quiz Mode found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AwarenessQuizMode"
                }
              }
            }
          },
          "404": {
            "description": "No Awareness Quiz Mode found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/serious-game/game-type/total": {
      "get": {
        "tags": [
          "cttp-gamification-controller"
        ],
        "summary": "Get Serious Game per Game Type",
        "operationId": "getSGPerType",
        "responses": {
          "200": {
            "description": "Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GamificationPerGameType"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/serious-game/game-types/{gtId}": {
      "get": {
        "tags": [
          "cttp-gamification-controller"
        ],
        "summary": "Get a Serious Game Type (by its id)",
        "operationId": "getGameType",
        "parameters": [
          {
            "name": "gtId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Serious Game Type found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTTPGamificationModel"
                }
              }
            }
          },
          "404": {
            "description": "No Serious Game Type found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/serious-game": {
      "get": {
        "tags": [
          "cttp-gamification-controller"
        ],
        "summary": "Get all Serious Game Models",
        "operationId": "getSeriousGameModels",
        "responses": {
          "200": {
            "description": "Serious Game model found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTTPGamificationModel"
                }
              }
            }
          },
          "404": {
            "description": "No Serious Game model found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      },
      "put": {
        "tags": [
          "cttp-gamification-controller"
        ],
        "summary": "Update a serious-game model",
        "operationId": "updateGamificationModel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CTTPGamificationModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Gamification Model inserted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTTPGamificationModel"
                }
              }
            }
          },
          "404": {
            "description": "Gamification Model  not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      },
      "post": {
        "tags": [
          "cttp-gamification-controller"
        ],
        "summary": "Insert a serious-game model",
        "operationId": "addGamificationModel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CTTPGamificationModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Gamification Model inserted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTTPGamificationModel"
                }
              }
            }
          },
          "404": {
            "description": "CTTPGamificationModel  not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/serious-game/{gmId}": {
      "get": {
        "tags": [
          "cttp-gamification-controller"
        ],
        "summary": "Get a single Serious Game Model by its id",
        "operationId": "getSeriousGameById",
        "parameters": [
          {
            "name": "gmId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Serious Game model found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTTPGamificationModel"
                }
              }
            }
          },
          "404": {
            "description": "No Serious Game model found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      },
      "delete": {
        "tags": [
          "cttp-gamification-controller"
        ],
        "summary": "Delete a serious game Model",
        "operationId": "deleteSeriousGameModel",
        "parameters": [
          {
            "name": "gmId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Gamification model deleted"
          },
          "404": {
            "description": "Gamification not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/serious-game/main-view": {
      "get": {
        "tags": [
          "cttp-gamification-controller"
        ],
        "summary": "Get all Serious Game Models (main-view)",
        "operationId": "getSeriousGameModelsMainView",
        "responses": {
          "200": {
            "description": "Serious Game model found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GamificationMainView"
                }
              }
            }
          },
          "404": {
            "description": "No Serious Game model found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/serious-game/training-scenario/{tsId}/available": {
      "get": {
        "tags": [
          "cttp-gamification-controller"
        ],
        "summary": "Get all available Serious Game Models (tsId)",
        "operationId": "getAvailableSeriousGameModels",
        "parameters": [
          {
            "name": "tsId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Serious Game model found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTTPGamificationModel"
                }
              }
            }
          },
          "404": {
            "description": "No Serious Game model found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/serious-game/available": {
      "get": {
        "tags": [
          "cttp-gamification-controller"
        ],
        "summary": "Get all available Serious Game Models",
        "operationId": "getAllAvailableSeriousGameModels",
        "responses": {
          "200": {
            "description": "Serious Game model found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTTPGamificationModel"
                }
              }
            }
          },
          "404": {
            "description": "No Serious Game model found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/serious-game/training-scenario": {
      "get": {
        "tags": [
          "cttp-gamification-controller"
        ],
        "summary": "Get all Serious Game Models by trainingScenarioId",
        "operationId": "getSeriousGameModel",
        "parameters": [
          {
            "name": "tsId",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Serious Game model found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTTPGamificationModel"
                }
              }
            }
          },
          "404": {
            "description": "No Serious Game model found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/serious-game/single/training-scenario": {
      "get": {
        "tags": [
          "cttp-gamification-controller"
        ],
        "summary": "Get a single Serious Game Model by trainingScenarioId",
        "operationId": "getSingleSeriousGameModel",
        "parameters": [
          {
            "name": "tsId",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Serious Game model found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTTPGamificationModel"
                }
              }
            }
          },
          "404": {
            "description": "No Serious Game model found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/serious-game/game-types": {
      "get": {
        "tags": [
          "cttp-gamification-controller"
        ],
        "summary": "Get  Serious Game Types",
        "operationId": "getGameTypes",
        "responses": {
          "200": {
            "description": "Serious Game Types found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTTPGamificationModel"
                }
              }
            }
          },
          "404": {
            "description": "No Serious Game Types found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/serious-game/protect/difficulty-levels": {
      "get": {
        "tags": [
          "cttp-gamification-controller"
        ],
        "summary": "Get Protect Difficulty Levels",
        "operationId": "getDifficultyLevels",
        "responses": {
          "200": {
            "description": "Difficulty Levels found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProtectDifficultyLevel"
                }
              }
            }
          },
          "404": {
            "description": "No Difficulty Levels found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/serious-game/protect/difficulty-levels/{dlId}": {
      "get": {
        "tags": [
          "cttp-gamification-controller"
        ],
        "summary": "Get Protect Difficulty Level",
        "operationId": "getDifficultyLevel",
        "parameters": [
          {
            "name": "dlId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Difficulty Level found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProtectDifficultyLevel"
                }
              }
            }
          },
          "404": {
            "description": "No Difficulty Level found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/serious-game/protect/card-deck/{id}": {
      "get": {
        "tags": [
          "cttp-gamification-controller"
        ],
        "summary": "Get Protect Card Deck identifier",
        "operationId": "getCardDeckId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Card Deck Id found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardDeckIdentifier"
                }
              }
            }
          },
          "404": {
            "description": "No Card Deck Id found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/serious-game/protect/card-deck": {
      "get": {
        "tags": [
          "cttp-gamification-controller"
        ],
        "summary": "Get Protect Card Deck identifiers",
        "operationId": "getCardDeckIds",
        "responses": {
          "200": {
            "description": "Card Deck Ids found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardDeckIdentifier"
                }
              }
            }
          },
          "404": {
            "description": "No Card Deck Ids found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      },
      "post": {
        "tags": [
          "cttp-gamification-controller"
        ],
        "summary": "Add Protect Card Deck identifiers",
        "operationId": "addCardDeckId",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardDeckIdentifier"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Card Deck Id inserted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardDeckIdentifier"
                }
              }
            }
          },
          "404": {
            "description": "No Card Deck Ids inserted"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/serious-game/awareness-quiz/metadata-value": {
      "post": {
        "tags": [
          "cttp-gamification-controller"
        ],
        "summary": "Add Metadata Value",
        "operationId": "addMetadataValue",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetadataValue"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "MetadataValue inserted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataValue"
                }
              }
            }
          },
          "404": {
            "description": "No MetadataValue inserted"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/serious-game/awareness-quiz/metadata-value/metadata-type": {
      "get": {
        "tags": [
          "cttp-gamification-controller"
        ],
        "summary": "Get Metadata Value (by typeId)",
        "operationId": "getMetadataValues",
        "parameters": [
          {
            "name": "mdtId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "MetadataValue found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataValue"
                }
              }
            }
          },
          "404": {
            "description": "No MetadataValue found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/serious-game/awareness-quiz/metadata-types": {
      "get": {
        "tags": [
          "cttp-gamification-controller"
        ],
        "summary": "Get Metadata types",
        "operationId": "getMetadataTypes",
        "responses": {
          "200": {
            "description": "MetadataTypes found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataType"
                }
              }
            }
          },
          "404": {
            "description": "No MetadataTypes found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/serious-game/awareness-quiz/metadata-type/{mdtId}": {
      "get": {
        "tags": [
          "cttp-gamification-controller"
        ],
        "summary": "Get Metadata type (by typeId)",
        "operationId": "getMetadataType",
        "parameters": [
          {
            "name": "mdtId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "MetadataType found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataType"
                }
              }
            }
          },
          "404": {
            "description": "No MetadataType found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/serious-game/awareness-quiz/modes": {
      "get": {
        "tags": [
          "cttp-gamification-controller"
        ],
        "summary": "Get Awareness Quiz Modes",
        "operationId": "getAQModes",
        "responses": {
          "200": {
            "description": "Awareness Quiz Modes found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AwarenessQuizMode"
                }
              }
            }
          },
          "404": {
            "description": "No Awareness Quiz Modes found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/hardware-assets": {
      "get": {
        "tags": [
          "hardware-rest-controller"
        ],
        "summary": "Get all hardware assets",
        "operationId": "getAll",
        "responses": {
          "200": {
            "description": "Hardware assets retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HardwareAsset"
                }
              }
            }
          },
          "404": {
            "description": "No hardware assets found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      },
      "put": {
        "tags": [
          "hardware-rest-controller"
        ],
        "summary": "Update a valid hardware asset",
        "operationId": "update_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HardwareAsset"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Hardware asset was successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HardwareAsset"
                }
              }
            }
          },
          "404": {
            "description": "Hardware asset not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      },
      "post": {
        "tags": [
          "hardware-rest-controller"
        ],
        "summary": "Insert a valid hardware asset",
        "operationId": "insert_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HardwareAsset"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Hardware asset was successfully inserted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HardwareAsset"
                }
              }
            }
          },
          "404": {
            "description": "Hardware asset not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/hardware-assets/types": {
      "get": {
        "tags": [
          "hardware-rest-controller"
        ],
        "summary": "Get hardware types",
        "operationId": "getAllSoftwareType",
        "responses": {
          "200": {
            "description": "Hardware types retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HardwareType"
                }
              }
            }
          },
          "404": {
            "description": "No hardware types found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/hardware-assets/types/{typeId}": {
      "get": {
        "tags": [
          "hardware-rest-controller"
        ],
        "summary": "Get a hardware type by its id",
        "operationId": "getHardwareStatus",
        "parameters": [
          {
            "name": "typeId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hardware type retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HardwareType"
                }
              }
            }
          },
          "404": {
            "description": "No hardware type found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/hardware-assets/file-system-types": {
      "get": {
        "tags": [
          "hardware-rest-controller"
        ],
        "summary": "Get hardware's file systems",
        "operationId": "getFileSystemTypes",
        "responses": {
          "200": {
            "description": "Hardware's file system retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileSystemType"
                }
              }
            }
          },
          "404": {
            "description": "No file systems found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/hardware-assets/file-system-types/{fileId}": {
      "get": {
        "tags": [
          "hardware-rest-controller"
        ],
        "summary": "Get a hardware's file system  by its id",
        "operationId": "getFileSystemById",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hardware's file system retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileSystemType"
                }
              }
            }
          },
          "404": {
            "description": "No file system found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/hardware-assets/memory-module-types": {
      "get": {
        "tags": [
          "hardware-rest-controller"
        ],
        "summary": "Get hardware's memory modules",
        "operationId": "getMemoryModuleTypes",
        "responses": {
          "200": {
            "description": "Hardware's memory modules retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemoryModuleType"
                }
              }
            }
          },
          "404": {
            "description": "No memory modules found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/hardware-assets/memory-module-types/{memoryTypeId}": {
      "get": {
        "tags": [
          "hardware-rest-controller"
        ],
        "summary": "Get a hardware's memory modules by its id",
        "operationId": "getMemoryModuleTypes_1",
        "parameters": [
          {
            "name": "memoryTypeId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hardware's memory module retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemoryModuleType"
                }
              }
            }
          },
          "404": {
            "description": "No memory module found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/hardware-assets/drive-types/{driveTypeId}": {
      "get": {
        "tags": [
          "hardware-rest-controller"
        ],
        "summary": "Get a hardware's drive by its id",
        "operationId": "getDriveTypes",
        "parameters": [
          {
            "name": "driveTypeId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hardware's drive retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DriveType"
                }
              }
            }
          },
          "404": {
            "description": "No drive found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/hardware-assets/drive-types": {
      "get": {
        "tags": [
          "hardware-rest-controller"
        ],
        "summary": "Get hardware's drives",
        "operationId": "getDriveTypes_1",
        "responses": {
          "200": {
            "description": "Hardware's drives retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DriveType"
                }
              }
            }
          },
          "404": {
            "description": "No drives found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/hardware-assets/peripheral-types": {
      "get": {
        "tags": [
          "hardware-rest-controller"
        ],
        "summary": "Get a hardware's peripheral types",
        "operationId": "getPeripheralTypes",
        "responses": {
          "200": {
            "description": "Hardware's peripheral types retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeripheralType"
                }
              }
            }
          },
          "404": {
            "description": "No peripheral types found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/hardware-assets/peripheral-types/{peripheralTypeId}": {
      "get": {
        "tags": [
          "hardware-rest-controller"
        ],
        "summary": "Get a hardware's peripheral type by its id",
        "operationId": "getPeripheralTypes_1",
        "parameters": [
          {
            "name": "peripheralTypeId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hardware's peripheral type retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeripheralType"
                }
              }
            }
          },
          "404": {
            "description": "No peripheral type found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/hardware-assets/gpu-memory-types/{gpuMemoryTypeId}": {
      "get": {
        "tags": [
          "hardware-rest-controller"
        ],
        "summary": "Get a hardware's graphical processor unit by its id",
        "operationId": "getGpuMemoryTypes",
        "parameters": [
          {
            "name": "gpuMemoryTypeId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hardware's graphical processor unit retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GpuMemoryType"
                }
              }
            }
          },
          "404": {
            "description": "No graphical processor unit found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/hardware-assets/gpu-memory-types": {
      "get": {
        "tags": [
          "hardware-rest-controller"
        ],
        "summary": "Get a hardware's graphical processor units",
        "operationId": "getGpuMemoryTypes_1",
        "responses": {
          "200": {
            "description": "Hardware's graphical processor units retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GpuMemoryType"
                }
              }
            }
          },
          "404": {
            "description": "No graphical processor units found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/hardware-assets/connection-types/{connectionTypeId}": {
      "get": {
        "tags": [
          "hardware-rest-controller"
        ],
        "summary": "Get a hardware's connection type by its id",
        "operationId": "getConnectionTypes",
        "parameters": [
          {
            "name": "connectionTypeId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hardware's connection type retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionType"
                }
              }
            }
          },
          "404": {
            "description": "No connection type found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/hardware-assets/connection-types": {
      "get": {
        "tags": [
          "hardware-rest-controller"
        ],
        "summary": "Get a hardware's connection types",
        "operationId": "getConnectionTypes_1",
        "responses": {
          "200": {
            "description": "Hardware's connection types retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionType"
                }
              }
            }
          },
          "404": {
            "description": "No connection types found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/hardware-assets/cpu-modules": {
      "delete": {
        "tags": [
          "hardware-rest-controller"
        ],
        "summary": "Delete a hardware's CPU",
        "operationId": "deleteCPU",
        "parameters": [
          {
            "name": "cpuId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hardware's CPU deleted",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/hardware-assets/network-modules": {
      "delete": {
        "tags": [
          "hardware-rest-controller"
        ],
        "summary": "Delete a hardware's Network module",
        "operationId": "deleteNetwork",
        "parameters": [
          {
            "name": "networkId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hardware's network module deleted",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/hardware-assets/memory-modules": {
      "delete": {
        "tags": [
          "hardware-rest-controller"
        ],
        "summary": "Delete a hardware's memory module",
        "operationId": "deleteMemory",
        "parameters": [
          {
            "name": "memoryId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hardware's CPU deleted",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/hardware-assets/port-modules": {
      "delete": {
        "tags": [
          "hardware-rest-controller"
        ],
        "summary": "Delete a hardware's port module",
        "operationId": "deletePort",
        "parameters": [
          {
            "name": "portId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hardware's port module deleted",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/hardware-assets/disk-modules": {
      "delete": {
        "tags": [
          "hardware-rest-controller"
        ],
        "summary": "Delete a hardware's disk module",
        "operationId": "deleteDisk",
        "parameters": [
          {
            "name": "diskId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hardware's disk module deleted",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/hardware-assets/motherboard-modules": {
      "delete": {
        "tags": [
          "hardware-rest-controller"
        ],
        "summary": "Delete a hardware's motherboard module",
        "operationId": "deleteMotherboard",
        "parameters": [
          {
            "name": "motherboardId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hardware's port motherboard deleted",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/hardware-assets/power-supply-modules": {
      "delete": {
        "tags": [
          "hardware-rest-controller"
        ],
        "summary": "Delete a hardware's power supply module",
        "operationId": "deletePowerSupply",
        "parameters": [
          {
            "name": "powerId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hardware's power supply module deleted",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/hardware-assets/video-adapter-modules": {
      "delete": {
        "tags": [
          "hardware-rest-controller"
        ],
        "summary": "Delete a hardware's graphical processor unit module",
        "operationId": "deleteVideoAdapter",
        "parameters": [
          {
            "name": "videoId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hardware's  graphical processor unit deleted",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/hardware-assets/assets": {
      "get": {
        "tags": [
          "hardware-rest-controller"
        ],
        "summary": "Get a hardware asset by its assetId",
        "operationId": "getByAssetID_1",
        "parameters": [
          {
            "name": "assetId",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hardware asset retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HardwareAsset"
                }
              }
            }
          },
          "404": {
            "description": "No hardware asset found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/hardware-assets/{hardwareId}": {
      "get": {
        "tags": [
          "hardware-rest-controller"
        ],
        "summary": "Get a hardware asset by its id",
        "operationId": "findByID_1",
        "parameters": [
          {
            "name": "hardwareId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hardware asset retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HardwareAsset"
                }
              }
            }
          },
          "404": {
            "description": "No hardware asset found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/hardware-assets/{hardwareId}/training-scenarios/{tsId}": {
      "delete": {
        "tags": [
          "hardware-rest-controller"
        ],
        "summary": "Delete a hardware asset",
        "operationId": "delete_1",
        "parameters": [
          {
            "name": "hardwareId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "tsId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hardware asset was successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HardwareAsset"
                }
              }
            }
          },
          "404": {
            "description": "Requested hardware asset not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/cttp-models/total": {
      "get": {
        "tags": [
          "cttp-model-controller"
        ],
        "summary": "Get total cttp models",
        "operationId": "getSoftwareStatus_2",
        "responses": {
          "200": {
            "description": "CTTP Models retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelsPerType"
                }
              }
            }
          },
          "404": {
            "description": "No status types found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/organisations": {
      "get": {
        "tags": [
          "organisation-rest-controller"
        ],
        "summary": "Get all organisations",
        "operationId": "getOrganisations",
        "responses": {
          "200": {
            "description": "Organisations retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organisation"
                }
              }
            }
          },
          "404": {
            "description": "No organisations exists"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      },
      "put": {
        "tags": [
          "organisation-rest-controller"
        ],
        "summary": "Update an organisation",
        "operationId": "update_2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Organisation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Organisation was successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organisation"
                }
              }
            }
          },
          "404": {
            "description": "No such organisation exists"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      },
      "post": {
        "tags": [
          "organisation-rest-controller"
        ],
        "summary": "Insert a valid organisation",
        "operationId": "insertOrganisation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Organisation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Organisation was successfully inserted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organisation"
                }
              }
            }
          },
          "404": {
            "description": "No such organisation exists"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/organisations/{organisationId}": {
      "get": {
        "tags": [
          "organisation-rest-controller"
        ],
        "summary": "Get an organisation by its id",
        "operationId": "getOrganisationByOrgId",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organisation retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organisation"
                }
              }
            }
          },
          "404": {
            "description": "No such organisation exists"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      },
      "delete": {
        "tags": [
          "organisation-rest-controller"
        ],
        "summary": "Delete an organisation",
        "operationId": "delete_2",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organisation was successfully deleted",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "No such organisation exists"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/organisations/{organisationId}/generic": {
      "get": {
        "tags": [
          "organisation-rest-controller"
        ],
        "summary": "Get an organisation + generic by its id",
        "operationId": "getOrganisationAndGeneric",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organisation retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organisation"
                }
              }
            }
          },
          "404": {
            "description": "No such organisation exists"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/organisations/types": {
      "get": {
        "tags": [
          "organisation-rest-controller"
        ],
        "summary": "Get types of organisations",
        "operationId": "getOrganisationType",
        "responses": {
          "200": {
            "description": "Organisation types retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationType"
                }
              }
            }
          },
          "404": {
            "description": "No organisation types exists"
          }
        }
      }
    },
    "/rest/api/organisations/types/{typeId}": {
      "get": {
        "tags": [
          "organisation-rest-controller"
        ],
        "summary": "Get a unique organisation type",
        "operationId": "getOrganisationByTypeId",
        "parameters": [
          {
            "name": "typeId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organisation type retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationType"
                }
              }
            }
          },
          "404": {
            "description": "No organisation type exists"
          }
        }
      }
    },
    "/rest/api/organisations/per-types/total": {
      "get": {
        "tags": [
          "organisation-rest-controller"
        ],
        "summary": "Get Organisation's per Type",
        "operationId": "getOrganisationPerTypeS",
        "responses": {
          "200": {
            "description": "Organisation retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationsPerType"
                }
              }
            }
          },
          "404": {
            "description": "No organisation type exists"
          }
        }
      }
    },
    "/rest/api/organisations/{orgId}/per-types/total": {
      "get": {
        "tags": [
          "organisation-rest-controller"
        ],
        "summary": "Get Organisation's per Type (per orgId)",
        "operationId": "getOrganisationPerTypeSPerOrgId",
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organisation retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationsPerType"
                }
              }
            }
          },
          "404": {
            "description": "No organisation type exists"
          }
        }
      }
    },
    "/rest/api/people": {
      "get": {
        "tags": [
          "person-controller"
        ],
        "summary": "Get the person assets",
        "operationId": "getAll_1",
        "responses": {
          "200": {
            "description": "Person assets retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          },
          "404": {
            "description": "No Person assets found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      },
      "put": {
        "tags": [
          "person-controller"
        ],
        "summary": "Update a person asset",
        "operationId": "update_3",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Person asset was successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          },
          "404": {
            "description": "No such person exists"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      },
      "post": {
        "tags": [
          "person-controller"
        ],
        "summary": "Insert a valid person asset",
        "operationId": "insert_2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Person asset was successfully inserted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          },
          "400": {
            "description": "Person asset cannot be empty"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/people/{personId}": {
      "get": {
        "tags": [
          "person-controller"
        ],
        "summary": "Get the person asset by its id",
        "operationId": "getByPersonID",
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Person asset retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          },
          "404": {
            "description": "No Person asset found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/people/roles": {
      "get": {
        "tags": [
          "person-controller"
        ],
        "summary": "Get the person roles",
        "operationId": "getPersonRoleTypeAll",
        "responses": {
          "200": {
            "description": "Person role retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonRoleType"
                }
              }
            }
          },
          "404": {
            "description": "No Person role found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/people/roles/{roleId}": {
      "get": {
        "tags": [
          "person-controller"
        ],
        "summary": "Get a person role by its id",
        "operationId": "getPersonRoleType",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Person role retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonRoleType"
                }
              }
            }
          },
          "404": {
            "description": "No Person role found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/people/assets": {
      "get": {
        "tags": [
          "person-controller"
        ],
        "summary": "Get the person asset by its assetId",
        "operationId": "getByAssetID_2",
        "parameters": [
          {
            "name": "assetId",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Person asset retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          },
          "404": {
            "description": "No Person asset found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/people/{personId}/training-scenarios/{tsId}": {
      "delete": {
        "tags": [
          "person-controller"
        ],
        "summary": "Delete a person asset",
        "operationId": "delete_3",
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "tsId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Person asset was successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          },
          "404": {
            "description": "Person asset can not be found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/processes": {
      "get": {
        "tags": [
          "process-controller"
        ],
        "summary": "Get all processes",
        "operationId": "getAll_2",
        "responses": {
          "200": {
            "description": "Processes retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Process"
                }
              }
            }
          },
          "404": {
            "description": "No processes found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      },
      "put": {
        "tags": [
          "process-controller"
        ],
        "summary": "Update a process",
        "operationId": "update_4",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Process"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Process  was successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Process"
                }
              }
            }
          },
          "404": {
            "description": "No such process exists"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      },
      "post": {
        "tags": [
          "process-controller"
        ],
        "summary": "Insert a valid process",
        "operationId": "insert_3",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Process"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Process  was successfully inserted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Process"
                }
              }
            }
          },
          "400": {
            "description": "Process cannot be empty"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/processes/{processId}": {
      "get": {
        "tags": [
          "process-controller"
        ],
        "summary": "Get a processes by its id",
        "operationId": "getByID",
        "parameters": [
          {
            "name": "processId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Process retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Process"
                }
              }
            }
          },
          "404": {
            "description": "No process found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/processes/assets": {
      "get": {
        "tags": [
          "process-controller"
        ],
        "summary": "Get a process by the assetId",
        "operationId": "getByAssetID_3",
        "parameters": [
          {
            "name": "assetId",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Process retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Process"
                }
              }
            }
          },
          "404": {
            "description": "No process found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/processes/{processId}/training-scenarios/{tsId}": {
      "delete": {
        "tags": [
          "process-controller"
        ],
        "summary": "Delete a process",
        "operationId": "delete_4",
        "parameters": [
          {
            "name": "processId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "tsId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Process  was successfully deleted",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "No such process exists"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/simulation": {
      "get": {
        "tags": [
          "cttp-simulation-controller"
        ],
        "summary": "Get all Simulation Models",
        "operationId": "getSimulationModels",
        "responses": {
          "200": {
            "description": "Simulation Models models found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTTPSimulationModel"
                }
              }
            }
          },
          "404": {
            "description": "No Simulation Models found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      },
      "put": {
        "tags": [
          "cttp-simulation-controller"
        ],
        "summary": "Update a simulation model",
        "operationId": "updateSimulation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CTTPSimulationModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Simulation Model inserted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTTPSimulationModel"
                }
              }
            }
          },
          "404": {
            "description": "Simulation Model  not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      },
      "post": {
        "tags": [
          "cttp-simulation-controller"
        ],
        "summary": "Insert a simulation model",
        "operationId": "addSimulation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CTTPSimulationModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Simulation Model inserted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTTPSimulationModel"
                }
              }
            }
          },
          "404": {
            "description": "Simulation  not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/simulation/{simulationModelId}": {
      "get": {
        "tags": [
          "cttp-simulation-controller"
        ],
        "summary": "Get a Simulation Model by its id",
        "operationId": "getSimulation",
        "parameters": [
          {
            "name": "simulationModelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Simulation Model model found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTTPSimulationModel"
                }
              }
            }
          },
          "404": {
            "description": "No Simulation Model found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      },
      "delete": {
        "tags": [
          "cttp-simulation-controller"
        ],
        "summary": "Delete a simulation Model",
        "operationId": "deleteSimulationModel",
        "parameters": [
          {
            "name": "simulationModelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Simulation model deleted"
          },
          "404": {
            "description": "Simulation not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/simulation/main-view": {
      "get": {
        "tags": [
          "cttp-simulation-controller"
        ],
        "summary": "Get all Simulation Models (main-view)",
        "operationId": "getSimulationModelsMainView",
        "responses": {
          "200": {
            "description": "Simulation Models models found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimulationMainView"
                }
              }
            }
          },
          "404": {
            "description": "No Simulation Models found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/simulation/training-scenario/{tsId}/available": {
      "get": {
        "tags": [
          "cttp-simulation-controller"
        ],
        "summary": "Get all available Simulation Models (tsId)",
        "operationId": "getAvailableSimulationModels",
        "parameters": [
          {
            "name": "tsId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Simulation Models models found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTTPSimulationModel"
                }
              }
            }
          },
          "404": {
            "description": "No Simulation Models found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/simulation/available": {
      "get": {
        "tags": [
          "cttp-simulation-controller"
        ],
        "summary": "Get all available Simulation Models",
        "operationId": "getAllAvailableSimulationModels",
        "responses": {
          "200": {
            "description": "Simulation Models models found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTTPSimulationModel"
                }
              }
            }
          },
          "404": {
            "description": "No Simulation Models found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/simulation/training-scenario": {
      "get": {
        "tags": [
          "cttp-simulation-controller"
        ],
        "summary": "Get all Simulation Models by trainingScenarioId",
        "operationId": "getSimulationModelsByTrainingScenario",
        "parameters": [
          {
            "name": "tsId",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Simulation Models model found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTTPSimulationModel"
                }
              }
            }
          },
          "404": {
            "description": "No Simulation Models found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/simulation/single/training-scenario": {
      "get": {
        "tags": [
          "cttp-simulation-controller"
        ],
        "summary": "Get a Simulation Model by trainingScenarioId",
        "operationId": "getSingleSimulationModel",
        "parameters": [
          {
            "name": "tsId",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Simulation Model model found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTTPSimulationModel"
                }
              }
            }
          },
          "404": {
            "description": "No Simulation Model found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/simulation/deployment-modes/{modeId}": {
      "get": {
        "tags": [
          "cttp-simulation-controller"
        ],
        "summary": "Get a deployment mode by its id",
        "operationId": "getDeploymentModes",
        "parameters": [
          {
            "name": "modeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deployment Mode found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTTPSimulationModel"
                }
              }
            }
          },
          "404": {
            "description": "No Deployment Mode found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/simulation/deployment-modes": {
      "get": {
        "tags": [
          "cttp-simulation-controller"
        ],
        "summary": "Get a deployment mode by its id",
        "operationId": "getDeploymentModes_1",
        "responses": {
          "200": {
            "description": "Deployment Mode found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CTTPSimulationModel"
                }
              }
            }
          },
          "404": {
            "description": "No Deployment Mode found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/simulation/per-deployment-modes/total": {
      "get": {
        "tags": [
          "cttp-simulation-controller"
        ],
        "summary": "Get Simulation Models per DeploymentModel",
        "operationId": "getSMDeploymentModes",
        "responses": {
          "200": {
            "description": "Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimulationPerDeploymentMode"
                }
              }
            }
          },
          "404": {
            "description": "No Deployment Mode found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/software-assets": {
      "get": {
        "tags": [
          "software-asset-controller"
        ],
        "summary": "Get all software assets",
        "operationId": "getAll_3",
        "responses": {
          "200": {
            "description": "Software assets retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftwareAsset"
                }
              }
            }
          },
          "404": {
            "description": "No Software assets found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      },
      "put": {
        "tags": [
          "software-asset-controller"
        ],
        "summary": "Update a software asset",
        "operationId": "update_5",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SoftwareAsset"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Software asset was successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftwareAsset"
                }
              }
            }
          },
          "404": {
            "description": "Software asset cannot be found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      },
      "post": {
        "tags": [
          "software-asset-controller"
        ],
        "summary": "Insert a valid software asset",
        "operationId": "insert_4",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SoftwareAsset"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Software asset was successfully inserted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftwareAsset"
                }
              }
            }
          },
          "400": {
            "description": "Software asset cannot be empty"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/software-assets/types": {
      "get": {
        "tags": [
          "software-asset-controller"
        ],
        "summary": "Get software types",
        "operationId": "getAllSoftwareType_1",
        "responses": {
          "200": {
            "description": "Software types retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Softwaretype"
                }
              }
            }
          },
          "404": {
            "description": "No Software types found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/software-assets/assets": {
      "get": {
        "tags": [
          "software-asset-controller"
        ],
        "summary": "Get a software asset by the assetId",
        "operationId": "getByAssetID_4",
        "parameters": [
          {
            "name": "assetId",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Software asset retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftwareAsset"
                }
              }
            }
          },
          "404": {
            "description": "No Software asset found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/software-assets/types/{typeId}": {
      "get": {
        "tags": [
          "software-asset-controller"
        ],
        "summary": "Get a software type by its id",
        "operationId": "getSoftwareType",
        "parameters": [
          {
            "name": "typeId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Software type retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Softwaretype"
                }
              }
            }
          },
          "404": {
            "description": "No such software type found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/software-assets/kinds": {
      "get": {
        "tags": [
          "software-asset-controller"
        ],
        "summary": "Get software kinds",
        "operationId": "getAllSoftwareKind",
        "responses": {
          "200": {
            "description": "Software kinds retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftwareKindType"
                }
              }
            }
          },
          "404": {
            "description": "No Software kinds found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/software-assets/kinds/{kindId}": {
      "get": {
        "tags": [
          "software-asset-controller"
        ],
        "summary": "Get a software kind  by its id",
        "operationId": "getSoftwareKind",
        "parameters": [
          {
            "name": "kindId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Software kind retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftwareKindType"
                }
              }
            }
          },
          "404": {
            "description": "No such software kind found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/software-assets/{softwareId}": {
      "get": {
        "tags": [
          "software-asset-controller"
        ],
        "summary": "Get a software asset by its id",
        "operationId": "findByID_2",
        "parameters": [
          {
            "name": "softwareId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Software asset retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftwareAsset"
                }
              }
            }
          },
          "404": {
            "description": "No Software asset found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/software-assets/{softwareId}/training-scenarios/{tsId}": {
      "delete": {
        "tags": [
          "software-asset-controller"
        ],
        "summary": "Delete a software asset",
        "operationId": "delete_5",
        "parameters": [
          {
            "name": "softwareId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "tsId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Software asset was successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftwareAsset"
                }
              }
            }
          },
          "404": {
            "description": "Software asset cannot be found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training/contents": {
      "get": {
        "tags": [
          "training-content-controller"
        ],
        "summary": "Get all Training Programme Contents",
        "operationId": "getTrainingProgrammeContents",
        "responses": {
          "200": {
            "description": "Training Programme Contents found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingProgrammeContent"
                }
              }
            }
          },
          "404": {
            "description": "No Training Programme Contents found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      },
      "put": {
        "tags": [
          "training-content-controller"
        ],
        "summary": "Update a training programme",
        "operationId": "updateTrainingProgrammeContent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrainingProgrammeContent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Training Programme Content inserted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingProgrammeContent"
                }
              }
            }
          },
          "404": {
            "description": "Training Programme Content not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      },
      "post": {
        "tags": [
          "training-content-controller"
        ],
        "summary": "Insert a training programme content",
        "operationId": "addTrainingProgrammeContent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrainingProgrammeContent"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Training Programme Content inserted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingProgrammeContent"
                }
              }
            }
          },
          "404": {
            "description": "Training Programme Content  not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training/contents/{trainingProgrammeContentId}": {
      "delete": {
        "tags": [
          "training-content-controller"
        ],
        "summary": "Delete a training programme",
        "operationId": "deleteTrainingProgrammeContent",
        "parameters": [
          {
            "name": "trainingProgrammeContentId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Training Programme Content deleted"
          },
          "404": {
            "description": "Training Programme Content not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training/contents/{trainingProgrammeContentId}/programmes/{tpId}": {
      "delete": {
        "tags": [
          "training-content-controller"
        ],
        "summary": "Delete a training programme content from Training Programme",
        "operationId": "deleteTrainingProgrammeContentFromTP",
        "parameters": [
          {
            "name": "trainingProgrammeContentId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "tpId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Training Programme Content unlinked"
          },
          "404": {
            "description": "Training Programme Content not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training/contents/scenarios": {
      "get": {
        "tags": [
          "training-content-controller"
        ],
        "summary": "Get Training Programme Contents per Scenario Id",
        "operationId": "getTrainingProgrammeContent",
        "parameters": [
          {
            "name": "scenarioId",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Training Programme Contents found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingProgrammeContent"
                }
              }
            }
          },
          "404": {
            "description": "No Training Programme Contents found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training/{tpId}/contents/": {
      "get": {
        "tags": [
          "training-content-controller"
        ],
        "summary": "Get a Training Programme Content by the training programme id",
        "operationId": "getOneTrainingProgrammeContent",
        "parameters": [
          {
            "name": "tpId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Training Programme Content found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingProgrammeContent"
                }
              }
            }
          },
          "404": {
            "description": "No Training Programme Content found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training/contents/{contentId}": {
      "get": {
        "tags": [
          "training-content-controller"
        ],
        "summary": "Get Training Programme Contents by its id",
        "operationId": "getTrainingProgrammeContentById",
        "parameters": [
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Training Programme Contents found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingProgrammeContent"
                }
              }
            }
          },
          "404": {
            "description": "No Training Programme Contents found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training/contents/main-view": {
      "get": {
        "tags": [
          "training-content-controller"
        ],
        "summary": "Get all Training Programme Contents (main-view)",
        "operationId": "getTrainingProgrammeContentsMainView",
        "responses": {
          "200": {
            "description": "Training Programme Contents found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TPCMainView"
                }
              }
            }
          },
          "404": {
            "description": "No Training Programme Contents found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training/contents/per-offering-level/total": {
      "get": {
        "tags": [
          "training-content-controller"
        ],
        "summary": "Get Training Programme Contents per OfferingLevelType",
        "operationId": "getTrainingProgrammeContentByOLT",
        "responses": {
          "200": {
            "description": "Training Programme Contents found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingProgrammeContentPerOfferingLevel"
                }
              }
            }
          },
          "404": {
            "description": "No Training Programme Contents found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training/contents/available/offering-level/{oltId}": {
      "get": {
        "tags": [
          "training-content-controller"
        ],
        "summary": "Get all available Training Programme Contents per OfferingLevelType",
        "operationId": "getTrainingProgrammeContentByOLT_1",
        "parameters": [
          {
            "name": "oltId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Training Programme Contents found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingProgrammeContent"
                }
              }
            }
          },
          "404": {
            "description": "No Training Programme Contents found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training/educational-materials": {
      "get": {
        "tags": [
          "training-content-controller"
        ],
        "summary": "Get all Educational Materials",
        "operationId": "getEducationalMaterials_1",
        "responses": {
          "200": {
            "description": "Educational Materials found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EducationalMaterial"
                }
              }
            }
          },
          "404": {
            "description": "No Educational Materials found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      },
      "put": {
        "tags": [
          "training-content-controller"
        ],
        "summary": "Update an educational material",
        "operationId": "updateEducationalMaterial",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EducationalMaterial"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Educational Material inserted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EducationalMaterial"
                }
              }
            }
          },
          "404": {
            "description": "Educational Material not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      },
      "post": {
        "tags": [
          "training-content-controller"
        ],
        "summary": "Insert an educational material",
        "operationId": "addEducationalMaterial",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EducationalMaterial"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Educational Material inserted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EducationalMaterial"
                }
              }
            }
          },
          "404": {
            "description": "Educational Material  not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training/educational-materials/{educationalMaterialId}": {
      "get": {
        "tags": [
          "training-content-controller"
        ],
        "summary": "Get a Educational Material by its id",
        "operationId": "getOneEducationalMaterial",
        "parameters": [
          {
            "name": "educationalMaterialId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Educational Material found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EducationalMaterial"
                }
              }
            }
          },
          "404": {
            "description": "No Educational Material found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      },
      "delete": {
        "tags": [
          "training-content-controller"
        ],
        "summary": "Delete an educational material",
        "operationId": "deleteEducationalMaterial",
        "parameters": [
          {
            "name": "educationalMaterialId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Educational Material deleted"
          },
          "404": {
            "description": "Educational Material not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training/educational-materials/available/offering-level/{oltId}": {
      "get": {
        "tags": [
          "training-content-controller"
        ],
        "summary": "Get all available Educational Materials by Offering Level",
        "operationId": "getEducationalMaterials",
        "parameters": [
          {
            "name": "oltId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Educational Materials found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EducationalMaterial"
                }
              }
            }
          },
          "404": {
            "description": "No Educational Materials found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training/educational-materials/per-offering-level/total": {
      "get": {
        "tags": [
          "training-content-controller"
        ],
        "summary": "Get all Educational Materials per OL",
        "operationId": "getEducationalMaterialsOL",
        "responses": {
          "200": {
            "description": "Educational Materials found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EducationalMaterialsPerOfferingLevel"
                }
              }
            }
          },
          "404": {
            "description": "No Educational Materials found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-delivery-parameters": {
      "get": {
        "tags": [
          "training-delivery-parameter-model-controller"
        ],
        "summary": "Get all Training Delivery Parameter Models",
        "operationId": "getTrainingDeliveryParameterModels",
        "responses": {
          "200": {
            "description": "Training Delivery Parameter Models found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingDeliveryParameterModel"
                }
              }
            }
          },
          "404": {
            "description": "No Training Delivery Parameter Models found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      },
      "put": {
        "tags": [
          "training-delivery-parameter-model-controller"
        ],
        "summary": "Update a training delivery parameter model",
        "operationId": "updateTrainingDeliveryParameterModel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrainingDeliveryParameterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Training Delivery Parameter Model inserted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingDeliveryParameterModel"
                }
              }
            }
          },
          "404": {
            "description": "Training Delivery Parameter Model not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      },
      "post": {
        "tags": [
          "training-delivery-parameter-model-controller"
        ],
        "summary": "Insert a training delivery parameter model",
        "operationId": "addTrainingDeliveryParameterModel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrainingDeliveryParameterModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Training Delivery Parameter Model inserted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingDeliveryParameterModel"
                }
              }
            }
          },
          "404": {
            "description": "Training Delivery Parameter Model  not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-delivery-parameters/{trainingDeliveryParameterModelId}": {
      "get": {
        "tags": [
          "training-delivery-parameter-model-controller"
        ],
        "summary": "Get a Training Delivery Parameter Model by its id",
        "operationId": "getOneTrainingDeliveryParameterModel",
        "parameters": [
          {
            "name": "trainingDeliveryParameterModelId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Training Delivery Parameter Model found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingDeliveryParameterModel"
                }
              }
            }
          },
          "404": {
            "description": "No Training Delivery Parameter Model found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      },
      "delete": {
        "tags": [
          "training-delivery-parameter-model-controller"
        ],
        "summary": "Delete a training delivery parameter model",
        "operationId": "deleteTrainingDeliveryParameterModel",
        "parameters": [
          {
            "name": "trainingDeliveryParameterModelId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Training Delivery Parameter Model deleted"
          },
          "404": {
            "description": "Training Delivery Parameter Model not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-delivery-parameters/scenario": {
      "get": {
        "tags": [
          "training-delivery-parameter-model-controller"
        ],
        "summary": "Get Training Delivery Parameter Models per Scenario",
        "operationId": "getTrainingDeliveryParameterModelByScenarioId",
        "parameters": [
          {
            "name": "scenarioId",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Training Delivery Parameter Models found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingDeliveryParameterModel"
                }
              }
            }
          },
          "404": {
            "description": "No Training Delivery Parameter Models found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-delivery-parameters/main-view": {
      "get": {
        "tags": [
          "training-delivery-parameter-model-controller"
        ],
        "summary": "Get all Training Delivery Parameter Models (main-view)",
        "operationId": "getTrainingDeliveryParameterModelsMainView",
        "responses": {
          "200": {
            "description": "Training Delivery Parameter Models found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingDeliveryParameterModel"
                }
              }
            }
          },
          "404": {
            "description": "No Training Delivery Parameter Models found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-delivery-parameters/available": {
      "get": {
        "tags": [
          "training-delivery-parameter-model-controller"
        ],
        "summary": "Get all available Training Delivery Parameter Models",
        "operationId": "getUnassignedTrainingDeliveryParameterModels",
        "responses": {
          "200": {
            "description": "Training Delivery Parameter Models found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingDeliveryParameterModel"
                }
              }
            }
          },
          "404": {
            "description": "No Training Delivery Parameter Models found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-delivery-parameters/training-scenario/{tsId}/available": {
      "get": {
        "tags": [
          "training-delivery-parameter-model-controller"
        ],
        "summary": "Get all available Training Delivery Parameter Models (tsId)",
        "operationId": "getUnassignedTrainingDeliveryParameterModels_1",
        "parameters": [
          {
            "name": "tsId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Training Delivery Parameter Models found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingDeliveryParameterModel"
                }
              }
            }
          },
          "404": {
            "description": "No Training Delivery Parameter Models found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-delivery-parameters/programme-types": {
      "get": {
        "tags": [
          "training-delivery-parameter-model-controller"
        ],
        "summary": "Get all programme types",
        "operationId": "getProgrammeTypes",
        "responses": {
          "200": {
            "description": "ProgrammeType found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgrammeType"
                }
              }
            }
          },
          "404": {
            "description": "No ProgrammeType  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-delivery-parameters/scenario-actor-types": {
      "get": {
        "tags": [
          "training-delivery-parameter-model-controller"
        ],
        "summary": "Get all scenario actor types",
        "operationId": "getScenarioActorTypes",
        "responses": {
          "200": {
            "description": "ScenarioActorType found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScenarioActorType"
                }
              }
            }
          },
          "404": {
            "description": "No ScenarioActorType  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-delivery-parameters/scenario-actor-types/{satId}": {
      "get": {
        "tags": [
          "training-delivery-parameter-model-controller"
        ],
        "summary": "Get a  scenario actor type by its id",
        "operationId": "getScenarioActorType",
        "parameters": [
          {
            "name": "satId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ScenarioActorType found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScenarioActorType"
                }
              }
            }
          },
          "404": {
            "description": "No ScenarioActorType  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-delivery-parameters/tool-types/{ttId}": {
      "get": {
        "tags": [
          "training-delivery-parameter-model-controller"
        ],
        "summary": "Get a  tool type by its id",
        "operationId": "getToolType",
        "parameters": [
          {
            "name": "ttId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ToolType found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToolType"
                }
              }
            }
          },
          "404": {
            "description": "No ToolType  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-delivery-parameters/training-delivery-role-types": {
      "get": {
        "tags": [
          "training-delivery-parameter-model-controller"
        ],
        "summary": "Get all training-delivery-role types",
        "operationId": "getTrainingDeliveryRoleTypes",
        "responses": {
          "200": {
            "description": "TrainingDeliveryRoleType found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingDeliveryRoleType"
                }
              }
            }
          },
          "404": {
            "description": "No TrainingDeliveryRoleType  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-delivery-parameters/training-delivery-role-types/{tdrId}": {
      "get": {
        "tags": [
          "training-delivery-parameter-model-controller"
        ],
        "summary": "Get a  training-delivery-role type by its id",
        "operationId": "getTrainingDeliveryRoleType",
        "parameters": [
          {
            "name": "tdrId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TrainingDeliveryRoleType found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingDeliveryRoleType"
                }
              }
            }
          },
          "404": {
            "description": "No TrainingDeliveryRoleType  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-delivery-parameters/training-delivery-role-types/frameworks": {
      "get": {
        "tags": [
          "training-delivery-parameter-model-controller"
        ],
        "summary": "Get a  training-delivery-role type frameworks",
        "operationId": "getTrainingDeliveryFrameworks",
        "responses": {
          "200": {
            "description": "TrainingDeliveryRoleType found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingDeliveryRoleType"
                }
              }
            }
          },
          "404": {
            "description": "No TrainingDeliveryRoleType  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-delivery-parameters/training-delivery-role-types/categories/frameworks": {
      "get": {
        "tags": [
          "training-delivery-parameter-model-controller"
        ],
        "summary": "Get a  training-delivery-role type by the framework name",
        "operationId": "getTrainingDeliveryByFrameworkName",
        "parameters": [
          {
            "name": "framework",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TrainingDeliveryRoleType found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingDeliveryRoleType"
                }
              }
            }
          },
          "404": {
            "description": "No TrainingDeliveryRoleType  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-delivery-parameters/training-delivery-role-types/categories": {
      "get": {
        "tags": [
          "training-delivery-parameter-model-controller"
        ],
        "summary": "Get a  training-delivery-role type by the category",
        "operationId": "getTrainingDeliveryByCategory",
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TrainingDeliveryRoleType found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingDeliveryRoleType"
                }
              }
            }
          },
          "404": {
            "description": "No TrainingDeliveryRoleType  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-delivery-parameters/action-types/{atId}": {
      "get": {
        "tags": [
          "training-delivery-parameter-model-controller"
        ],
        "summary": "Get a Training Programmes' action type by its id",
        "operationId": "getActionTypeByItsId",
        "parameters": [
          {
            "name": "atId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Action Type found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionType"
                }
              }
            }
          },
          "404": {
            "description": "No Action Type  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-delivery-parameters/action-types/frameworks": {
      "get": {
        "tags": [
          "training-delivery-parameter-model-controller"
        ],
        "summary": "Get a Training Programmes' action types by its framework Id",
        "operationId": "getActionTypeByFrameworkId",
        "parameters": [
          {
            "name": "frameworkId",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Action Types found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionType"
                }
              }
            }
          },
          "404": {
            "description": "No Action Types  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-delivery-parameters/action-types": {
      "get": {
        "tags": [
          "training-delivery-parameter-model-controller"
        ],
        "summary": "Get all Training Programmes' action types",
        "operationId": "getActionTypes",
        "responses": {
          "200": {
            "description": "Action Types found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionType"
                }
              }
            }
          },
          "404": {
            "description": "No Action Types  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-delivery-parameters/training-standards": {
      "get": {
        "tags": [
          "training-delivery-parameter-model-controller"
        ],
        "summary": "Get all Training Programmes' training standards",
        "operationId": "getTrainingStandardTypes",
        "responses": {
          "200": {
            "description": "TrainingStandardType found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingStandardType"
                }
              }
            }
          },
          "404": {
            "description": "No TrainingStandardType  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-delivery-parameters/training-standards/sdo": {
      "get": {
        "tags": [
          "training-delivery-parameter-model-controller"
        ],
        "summary": "Get all Training Programmes' training standard SDOs",
        "operationId": "getTrainingStandardSDOs",
        "responses": {
          "200": {
            "description": "TrainingStandardType found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingStandardType"
                }
              }
            }
          },
          "404": {
            "description": "No TrainingStandardType  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-delivery-parameters/training-standards/standards/sdo": {
      "get": {
        "tags": [
          "training-delivery-parameter-model-controller"
        ],
        "summary": "Get all Training Programmes' training standards",
        "operationId": "getTrainingStandardBySDO",
        "parameters": [
          {
            "name": "sdo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TrainingStandardType found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingStandardType"
                }
              }
            }
          },
          "404": {
            "description": "No TrainingStandardType  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-delivery-parameters/training-standards/domain/standards": {
      "get": {
        "tags": [
          "training-delivery-parameter-model-controller"
        ],
        "summary": "Get all Training Programmes' training standards",
        "operationId": "getTrainingStandards",
        "parameters": [
          {
            "name": "standard",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TrainingStandardType found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingStandardType"
                }
              }
            }
          },
          "404": {
            "description": "No TrainingStandardType  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-delivery-parameters/training-standards/{tsId}": {
      "get": {
        "tags": [
          "training-delivery-parameter-model-controller"
        ],
        "summary": "Get a Training Programmes' training standard by its id",
        "operationId": "getTrainingStandardType",
        "parameters": [
          {
            "name": "tsId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TrainingStandardType found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingStandardType"
                }
              }
            }
          },
          "404": {
            "description": "No TrainingStandardType  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-delivery-parameters/per-programme-type/total": {
      "get": {
        "tags": [
          "training-delivery-parameter-model-controller"
        ],
        "summary": "Get a Training Delivery Parameter per ProgrammeType",
        "operationId": "getTPDMPerType",
        "responses": {
          "200": {
            "description": "Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TDPPerProgrammeType"
                }
              }
            }
          },
          "404": {
            "description": "No TrainingStandardType  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-delivery-parameters/execution-info-screen/{tpeId}": {
      "delete": {
        "tags": [
          "training-delivery-parameter-model-controller"
        ],
        "summary": "Delete a training programme execution info for a specific TDPM",
        "operationId": "deleteTPEIScreen",
        "parameters": [
          {
            "name": "tpeId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Execution info screen deleted"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-delivery-parameters/execution-info-screen/screen-info/{siId}": {
      "delete": {
        "tags": [
          "training-delivery-parameter-model-controller"
        ],
        "summary": "Delete a training programme execution's info screen for a specific TDPM",
        "operationId": "deleteScreenInfo",
        "parameters": [
          {
            "name": "siId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Execution info screen deleted"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-delivery-parameters/execution-info-screen/screen-info/expected-trace/{etId}": {
      "delete": {
        "tags": [
          "training-delivery-parameter-model-controller"
        ],
        "summary": "Delete a training programme execution's info screen's expected trace for a specific TDPM",
        "operationId": "deleteET",
        "parameters": [
          {
            "name": "etId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Execution info screen deleted"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-delivery-parameters/tool-types": {
      "get": {
        "tags": [
          "training-delivery-parameter-model-controller"
        ],
        "summary": "Get all tool types",
        "operationId": "getToolTypes",
        "responses": {
          "200": {
            "description": "ToolType found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToolType"
                }
              }
            }
          },
          "404": {
            "description": "No ToolType  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-delivery-parameters/programme-types/{ptId}": {
      "get": {
        "tags": [
          "training-delivery-parameter-model-controller"
        ],
        "summary": "Get a  programme type by its id",
        "operationId": "getProgrammeType",
        "parameters": [
          {
            "name": "ptId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ProgrammeType found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgrammeType"
                }
              }
            }
          },
          "404": {
            "description": "No ProgrammeType  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-programmes/execution-tools/{etId}": {
      "get": {
        "tags": [
          "training-programme-controller"
        ],
        "summary": "Get a Training Programmes' execution tool by its id",
        "operationId": "getToolType_1",
        "parameters": [
          {
            "name": "etId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Execution Tool found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToolType"
                }
              }
            }
          },
          "404": {
            "description": "No Execution Tool  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-programmes/duration-units": {
      "get": {
        "tags": [
          "training-programme-controller"
        ],
        "summary": "Get the duration units",
        "operationId": "getDurationUnit",
        "responses": {
          "200": {
            "description": "Duration Units found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DurationUnit"
                }
              }
            }
          },
          "404": {
            "description": "No Duration Unit  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-programmes/duration-units/{durationUnitId}": {
      "get": {
        "tags": [
          "training-programme-controller"
        ],
        "summary": "Get a duration unit",
        "operationId": "getDurationUnit_1",
        "parameters": [
          {
            "name": "durationUnitId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Duration Unit found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DurationUnit"
                }
              }
            }
          },
          "404": {
            "description": "No Duration Unit  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-programmes": {
      "get": {
        "tags": [
          "training-programme-controller"
        ],
        "summary": "Get all Training Programmes",
        "operationId": "getTraining",
        "responses": {
          "200": {
            "description": "Training Programmes found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingProgramme"
                }
              }
            }
          },
          "404": {
            "description": "No Training Programmes found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      },
      "put": {
        "tags": [
          "training-programme-controller"
        ],
        "summary": "Update a training programme",
        "operationId": "updateTrainingProgramme",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrainingProgramme"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Training Programme inserted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingProgramme"
                }
              }
            }
          },
          "404": {
            "description": "Training Programme not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      },
      "post": {
        "tags": [
          "training-programme-controller"
        ],
        "summary": "Insert a training programme",
        "operationId": "addTrainingProgramme",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrainingProgramme"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Training Programme inserted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingProgramme"
                }
              }
            }
          },
          "404": {
            "description": "Training Programme  not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-programmes/offering-levels": {
      "get": {
        "tags": [
          "training-programme-controller"
        ],
        "summary": "Get all Training Programmes' offering levels",
        "operationId": "getOfferingLevelTypes",
        "responses": {
          "200": {
            "description": "OfferingLevel found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OfferingLevelType"
                }
              }
            }
          },
          "404": {
            "description": "No OfferingLevel  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-programmes/offering-levels/{olId}": {
      "get": {
        "tags": [
          "training-programme-controller"
        ],
        "summary": "Get a Training Programmes' offering level by its id",
        "operationId": "getOfferingLevel",
        "parameters": [
          {
            "name": "olId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OfferingLevel found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OfferingLevelType"
                }
              }
            }
          },
          "404": {
            "description": "No OfferingLevel  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-programmes/purpose-types": {
      "get": {
        "tags": [
          "training-programme-controller"
        ],
        "summary": "Get all Training Programmes' purpose types",
        "operationId": "getPurposeTypes",
        "responses": {
          "200": {
            "description": "PurposeType found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurposeType"
                }
              }
            }
          },
          "404": {
            "description": "No PurposeType  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-programmes/purpose-types/{ptId}": {
      "get": {
        "tags": [
          "training-programme-controller"
        ],
        "summary": "Get a Training Programmes' purpose type by its id",
        "operationId": "getPurposeType",
        "parameters": [
          {
            "name": "ptId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "PurposeType found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurposeType"
                }
              }
            }
          },
          "404": {
            "description": "No PurposeType  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-programmes/targeted-user-types": {
      "get": {
        "tags": [
          "training-programme-controller"
        ],
        "summary": "Get all Training Programmes' targeted user types",
        "operationId": "getTargetedUserTypes",
        "responses": {
          "200": {
            "description": "TargetedUserType found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetedUserType"
                }
              }
            }
          },
          "404": {
            "description": "No TargetedUserType  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-programmes/targeted-users-types/{tutId}": {
      "get": {
        "tags": [
          "training-programme-controller"
        ],
        "summary": "Get a Training Programmes' targeted user type by its id",
        "operationId": "getTargetedUserType",
        "parameters": [
          {
            "name": "tutId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TargetedUserType found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetedUserType"
                }
              }
            }
          },
          "404": {
            "description": "No TargetedUserType  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-programmes/training-role-types": {
      "get": {
        "tags": [
          "training-programme-controller"
        ],
        "summary": "Get all Training Programmes' training role types",
        "operationId": "getTrainingRoleTypes",
        "responses": {
          "200": {
            "description": "TrainingRoleType found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingRoleType"
                }
              }
            }
          },
          "404": {
            "description": "No TrainingRoleType  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-programmes/{trainingProgrammeId}": {
      "get": {
        "tags": [
          "training-programme-controller"
        ],
        "summary": "Get a Training Programme by its id",
        "operationId": "getOneTrainingProgramme",
        "parameters": [
          {
            "name": "trainingProgrammeId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Training Programme found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingProgramme"
                }
              }
            }
          },
          "404": {
            "description": "No Training Programme found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      },
      "delete": {
        "tags": [
          "training-programme-controller"
        ],
        "summary": "Delete a training programme",
        "operationId": "deleteTrainingProgramme",
        "parameters": [
          {
            "name": "trainingProgrammeId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Training Programme deleted"
          },
          "404": {
            "description": "Training Programme not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-programmes/organisations/{organisationId}": {
      "get": {
        "tags": [
          "training-programme-controller"
        ],
        "summary": "Get Training Programmes per Organisation",
        "operationId": "getTrainingProgramme",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Training Programmes found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingProgramme"
                }
              }
            }
          },
          "404": {
            "description": "No Training Programmes found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-programmes/main-view": {
      "get": {
        "tags": [
          "training-programme-controller"
        ],
        "summary": "Get all Training Programmes (main-view)",
        "operationId": "getTrainingProgrammeMainView",
        "responses": {
          "200": {
            "description": "Training Programmes found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TPMainView"
                }
              }
            }
          },
          "404": {
            "description": "No Training Programmes found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-programmes/main-view/organisations/{orgId}": {
      "get": {
        "tags": [
          "training-programme-controller"
        ],
        "summary": "Get all Training Programmes Per Organisation(main-view)",
        "operationId": "getTrainingProgrammeMainViewPerOrganisation",
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Training Programmes found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TPMainView"
                }
              }
            }
          },
          "404": {
            "description": "No Training Programmes found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-programmes/training-role-types/{trtId}": {
      "get": {
        "tags": [
          "training-programme-controller"
        ],
        "summary": "Get a Training Programmes' training role type by its id",
        "operationId": "getTrainingRoleType",
        "parameters": [
          {
            "name": "trtId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TrainingRoleType found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingRoleType"
                }
              }
            }
          },
          "404": {
            "description": "No TrainingRoleType  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-programmes/vertical-sector-types": {
      "get": {
        "tags": [
          "training-programme-controller"
        ],
        "summary": "Get all Training Programmes' vertical sector types",
        "operationId": "getVerticalSectorTypes",
        "responses": {
          "200": {
            "description": "VerticalSectorType found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerticalSectorType"
                }
              }
            }
          },
          "404": {
            "description": "No VerticalSectorType  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-programmes/vertical-sector-types/{vstId}": {
      "get": {
        "tags": [
          "training-programme-controller"
        ],
        "summary": "Get a Training Programmes' vertical sector type by its id",
        "operationId": "getVerticalSectorType",
        "parameters": [
          {
            "name": "vstId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "VerticalSectorType found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerticalSectorType"
                }
              }
            }
          },
          "404": {
            "description": "No VerticalSectorType  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-programmes/training-scheme-types": {
      "get": {
        "tags": [
          "training-programme-controller"
        ],
        "summary": "Get all Training Programmes' training schemes",
        "operationId": "getTrainingSchemeTypes",
        "responses": {
          "200": {
            "description": "TrainingSchemeType found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingSchemeType"
                }
              }
            }
          },
          "404": {
            "description": "No TrainingSchemeType  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-programmes/training-scheme-types/schemes/vendors": {
      "get": {
        "tags": [
          "training-programme-controller"
        ],
        "summary": "Get all Training Programmes' training scheme by vendor",
        "operationId": "getTrainingSchemeVendors",
        "parameters": [
          {
            "name": "vendor",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TrainingSchemeType found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingSchemeType"
                }
              }
            }
          },
          "404": {
            "description": "No TrainingSchemeType  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-programmes/training-scheme-types/vendors": {
      "get": {
        "tags": [
          "training-programme-controller"
        ],
        "summary": "Get all Training Programmes' training scheme vendors",
        "operationId": "getTrainingSchemeVendors_1",
        "responses": {
          "200": {
            "description": "TrainingSchemeType found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingSchemeType"
                }
              }
            }
          },
          "404": {
            "description": "No TrainingSchemeType  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-programmes/training-scheme-types/domains/schemes": {
      "get": {
        "tags": [
          "training-programme-controller"
        ],
        "summary": "Get all Training Programmes' training domains by scheme name",
        "operationId": "getTrainingSchemes",
        "parameters": [
          {
            "name": "scheme",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TrainingSchemeType found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingSchemeType"
                }
              }
            }
          },
          "404": {
            "description": "No TrainingSchemeType  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-programmes/training-scheme-types/{tsId}": {
      "get": {
        "tags": [
          "training-programme-controller"
        ],
        "summary": "Get a Training Programmes' training scheme by its id",
        "operationId": "getTrainingSchemeType",
        "parameters": [
          {
            "name": "tsId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TrainingSchemeType found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingSchemeType"
                }
              }
            }
          },
          "404": {
            "description": "No TrainingSchemeType  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-programmes/aggregated": {
      "get": {
        "tags": [
          "training-programme-controller"
        ],
        "summary": "Get aggregated information for Training Programmes",
        "operationId": "getTrainingAggregateInfo",
        "responses": {
          "200": {
            "description": "Aggregated info returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingProgrammeAggregateInfo"
                }
              }
            }
          },
          "404": {
            "description": "No Aggregated info  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-programmes/organisations/{organisationId}/aggregated": {
      "get": {
        "tags": [
          "training-programme-controller"
        ],
        "summary": "Get aggregated information for Training Programmes per organisationId",
        "operationId": "getTrainingAggregateInfoPerOrganisation",
        "parameters": [
          {
            "name": "organisationId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Aggregated info returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingProgrammeAggregateInfo"
                }
              }
            }
          },
          "404": {
            "description": "No Aggregated info  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-programmes/per-offering-level/total": {
      "get": {
        "tags": [
          "training-programme-controller"
        ],
        "summary": "Count Training Programmes per offering level",
        "operationId": "getTPsperOL",
        "responses": {
          "200": {
            "description": "TPs found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingProgrammesPerOfferingLevel"
                }
              }
            }
          },
          "404": {
            "description": "No TPs found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-programmes/organisations/{orgId}/per-offering-level/total": {
      "get": {
        "tags": [
          "training-programme-controller"
        ],
        "summary": "Count Training Programmes per offering level (per OrgId)",
        "operationId": "getTPsperOLPerOrg",
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TPs found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingProgrammesPerOfferingLevel"
                }
              }
            }
          },
          "404": {
            "description": "No TPs found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-programmes/execution-tools": {
      "get": {
        "tags": [
          "training-programme-controller"
        ],
        "summary": "Get all Training Programmes' execution tool ",
        "operationId": "getToolTypes_1",
        "responses": {
          "200": {
            "description": "Execution Tools found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToolType"
                }
              }
            }
          },
          "404": {
            "description": "No Execution Tools  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-scenario/main-view": {
      "get": {
        "tags": [
          "training-scenario-controller"
        ],
        "summary": "Get all Training Scenarios (main-view)",
        "operationId": "getTrainingScenarioMainView",
        "responses": {
          "200": {
            "description": "Training Scenario  found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingScenarioMainView"
                }
              }
            }
          },
          "404": {
            "description": "No Training Scenario  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-scenario/organisations": {
      "get": {
        "tags": [
          "training-scenario-controller"
        ],
        "summary": "Get a Training Scenario by an organisationId",
        "operationId": "getTrainingScenarioByOrganisation",
        "parameters": [
          {
            "name": "organisationId",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Training Scenario found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingScenario"
                }
              }
            }
          },
          "404": {
            "description": "No Training Scenario  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-scenario": {
      "get": {
        "tags": [
          "training-scenario-controller"
        ],
        "summary": "Get all Training Scenarios",
        "operationId": "getTrainingScenarios",
        "responses": {
          "200": {
            "description": "Training Scenario found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingScenario"
                }
              }
            }
          },
          "404": {
            "description": "No Training Scenario found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      },
      "put": {
        "tags": [
          "training-scenario-controller"
        ],
        "summary": "Update a training scenario",
        "operationId": "updateTrainingScenario",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrainingScenario"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Training Scenario  inserted",
            "content": {
              "text/html; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingScenario"
                }
              }
            }
          },
          "404": {
            "description": "Training Scenario  not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      },
      "post": {
        "tags": [
          "training-scenario-controller"
        ],
        "summary": "Insert a training scenario",
        "operationId": "addTrainingScenario",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrainingScenario"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Training Scenario inserted",
            "content": {
              "text/html; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingScenario"
                }
              }
            }
          },
          "404": {
            "description": "Training Scenario  not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-scenario/total": {
      "get": {
        "tags": [
          "training-scenario-controller"
        ],
        "summary": "Count training scenarios",
        "operationId": "countTrainingScenarios",
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-scenario/organisations/{orgId}/total": {
      "get": {
        "tags": [
          "training-scenario-controller"
        ],
        "summary": "Count training scenarios per OrgId",
        "operationId": "countTrainingScenariosPerOrgId",
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-scenario/{trainingScenarioId}": {
      "get": {
        "tags": [
          "training-scenario-controller"
        ],
        "summary": "Get a Training Scenario by its id",
        "operationId": "getTrainingScenario",
        "parameters": [
          {
            "name": "trainingScenarioId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Training Scenario  found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingScenario"
                }
              }
            }
          },
          "404": {
            "description": "No Training Scenario  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      },
      "delete": {
        "tags": [
          "training-scenario-controller"
        ],
        "summary": "Delete a training programme",
        "operationId": "deleteTrainingScenario",
        "parameters": [
          {
            "name": "trainingScenarioId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Training Scenario deleted"
          },
          "404": {
            "description": "Training Scenario  not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/training-scenario/main-view/organisations/{orgId}": {
      "get": {
        "tags": [
          "training-scenario-controller"
        ],
        "summary": "Get all Training Scenarios per Organisation (main-view)",
        "operationId": "getTrainingScenarioMainViewPerOrg",
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Training Scenario  found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingScenarioMainView"
                }
              }
            }
          },
          "404": {
            "description": "No Training Scenario  found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/questionnaire": {
      "get": {
        "tags": [
          "questionnaire-controller"
        ],
        "summary": "Get a questionnaire",
        "operationId": "getQuestionnaire",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Questionnaire retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusType"
                }
              }
            }
          },
          "404": {
            "description": "No questionnaire found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      },
      "post": {
        "tags": [
          "questionnaire-controller"
        ],
        "summary": "Insert a questionnaire",
        "operationId": "addQuestionnaire",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Questionnaire"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Questionnaire inserted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Questionnaire"
                }
              }
            }
          },
          "404": {
            "description": "Questionnaire not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/questionnaires": {
      "get": {
        "tags": [
          "questionnaire-controller"
        ],
        "summary": "Get all questionnaires",
        "operationId": "getQuestionnaires",
        "responses": {
          "200": {
            "description": "Questionnaire retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusType"
                }
              }
            }
          },
          "404": {
            "description": "No questionnaire found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/export/questionnaires/{qId}": {
      "get": {
        "tags": [
          "questionnaire-controller"
        ],
        "summary": "Export questionnaire",
        "operationId": "exportQuestionnaire",
        "parameters": [
          {
            "name": "qId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Questionnaire retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusType"
                }
              }
            }
          },
          "404": {
            "description": "No questionnaire found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/rest/api/questionnaires/{qId}": {
      "delete": {
        "tags": [
          "questionnaire-controller"
        ],
        "summary": "Delete a questionnaire",
        "operationId": "delete_6",
        "parameters": [
          {
            "name": "qId",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Questionnaire deleted"
          },
          "404": {
            "description": "Questionnaire not found"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "StatusType": {
        "type": "object",
        "properties": {
          "statusID": {
            "type": "integer",
            "format": "int32"
          },
          "statusField": {
            "type": "string"
          },
          "statusValue": {
            "type": "string"
          },
          "statusSymbol": {
            "type": "string"
          }
        }
      },
      "Alert": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "alertResponsible": {
            "$ref": "#/components/schemas/AlertResponsible"
          },
          "notification": {
            "$ref": "#/components/schemas/Notification"
          },
          "alert": {
            "type": "string"
          },
          "resolvedAt": {
            "type": "string",
            "format": "date-time"
          },
          "receivedAt": {
            "type": "string",
            "format": "date-time"
          },
          "resolved": {
            "type": "boolean"
          }
        }
      },
      "AlertResponsible": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "responsible": {
            "type": "string"
          }
        }
      },
      "Notification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "notification": {
            "type": "string"
          },
          "notificationSource": {
            "$ref": "#/components/schemas/NotificationSource"
          },
          "issuedAt": {
            "type": "string",
            "format": "date-time"
          },
          "readAt": {
            "type": "string",
            "format": "date-time"
          },
          "read": {
            "type": "boolean"
          }
        }
      },
      "NotificationSource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "source": {
            "type": "string"
          }
        }
      },
      "AssessmentType": {
        "type": "object",
        "properties": {
          "assesmTid": {
            "type": "integer",
            "format": "int32"
          },
          "assesmTField": {
            "type": "string"
          },
          "assesmTValue": {
            "type": "string"
          },
          "assesmTSymbol": {
            "type": "string"
          }
        }
      },
      "ActualTrace": {
        "type": "object",
        "properties": {
          "acID": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "string"
          },
          "field": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "maxDurationTime": {
            "type": "integer",
            "format": "int32"
          },
          "maxDurationTimeUnit": {
            "$ref": "#/components/schemas/DurationUnit"
          }
        }
      },
      "ActualTraceRef": {
        "type": "object",
        "properties": {
          "acrId": {
            "type": "integer",
            "format": "int64"
          },
          "idref": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ActualTraces": {
        "type": "object",
        "properties": {
          "atId": {
            "type": "integer",
            "format": "int64"
          },
          "actualTrace": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActualTrace"
            }
          }
        }
      },
      "Answers": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "answerID": {
            "type": "integer",
            "format": "int32"
          },
          "answer": {
            "type": "string"
          }
        }
      },
      "Application": {
        "type": "object",
        "properties": {
          "applicationID": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "constraints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DFConstraint"
            }
          }
        }
      },
      "AssessmentCriterion": {
        "type": "object",
        "properties": {
          "assessmentcriterionID": {
            "type": "integer",
            "format": "int64"
          },
          "language": {
            "type": "string"
          },
          "specification": {
            "type": "string"
          },
          "processingTool": {
            "type": "string"
          },
          "internalRepresentation": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "byte"
            }
          },
          "assessmentModel": {
            "$ref": "#/components/schemas/AssessmentModel"
          }
        }
      },
      "AssessmentModel": {
        "type": "object",
        "properties": {
          "assessmentModelId": {
            "type": "integer",
            "format": "int64"
          },
          "assessmentType": {
            "$ref": "#/components/schemas/AssessmentType"
          },
          "description": {
            "type": "string"
          },
          "assessmentTools": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssessmentTool"
            }
          }
        }
      },
      "AssessmentModelExecution": {
        "type": "object",
        "properties": {
          "assessmentmodelexecutionID": {
            "type": "integer",
            "format": "int64"
          },
          "assessmentModelExecutionStatusType": {
            "$ref": "#/components/schemas/AssessmentModelExecutionStatusType"
          },
          "assessmentModel": {
            "$ref": "#/components/schemas/AssessmentModel"
          },
          "executionType": {
            "$ref": "#/components/schemas/ExecutionType"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "finished": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "repeatEvery": {
            "$ref": "#/components/schemas/RepeatEvery"
          },
          "creatorID": {
            "type": "integer",
            "format": "int64"
          },
          "trainingScenario": {
            "$ref": "#/components/schemas/TrainingScenario"
          },
          "organisation": {
            "$ref": "#/components/schemas/Organisation"
          },
          "assessmentProfile": {
            "$ref": "#/components/schemas/AssessmentProfile"
          },
          "countFindings": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "AssessmentModelExecutionStatusType": {
        "type": "object",
        "properties": {
          "assessmentModelExecutionStatusID": {
            "type": "integer",
            "format": "int32"
          },
          "amesField": {
            "type": "string"
          },
          "amesValue": {
            "type": "string"
          },
          "amesSymbol": {
            "type": "string"
          }
        }
      },
      "AssessmentProfile": {
        "type": "object",
        "properties": {
          "assessmentprofileID": {
            "type": "integer",
            "format": "int64"
          },
          "profileName": {
            "type": "string"
          },
          "assessmentModel": {
            "$ref": "#/components/schemas/AssessmentModel"
          },
          "description": {
            "type": "string"
          },
          "explanation": {
            "type": "string"
          },
          "assessmentCriteria": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssessmentCriterion"
            }
          }
        }
      },
      "AssessmentResult": {
        "type": "object",
        "properties": {
          "assessmentResultID": {
            "type": "integer",
            "format": "int64"
          },
          "likelihoodType": {
            "$ref": "#/components/schemas/LikelihoodType"
          },
          "initialDetection": {
            "type": "string",
            "format": "date-time"
          },
          "lastChecked": {
            "type": "string",
            "format": "date-time"
          },
          "activeUntil": {
            "type": "string",
            "format": "date-time"
          },
          "trainingScenario": {
            "$ref": "#/components/schemas/TrainingScenario"
          },
          "normalised": {
            "type": "integer",
            "format": "int32"
          },
          "assessmentModelExecution": {
            "$ref": "#/components/schemas/AssessmentModelExecution"
          }
        }
      },
      "AssessmentTool": {
        "type": "object",
        "properties": {
          "toolID": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Asset": {
        "type": "object",
        "properties": {
          "assetID": {
            "type": "integer",
            "format": "int64"
          },
          "typeID": {
            "type": "integer",
            "format": "int32"
          },
          "activeFrom": {
            "type": "string",
            "format": "date-time"
          },
          "activeTo": {
            "type": "string",
            "format": "date-time"
          },
          "tableName": {
            "type": "string"
          },
          "initiallyDiscoveredID": {
            "type": "integer",
            "format": "int64"
          },
          "trainingScenarios": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrainingScenario"
            }
          }
        }
      },
      "Attribute": {
        "type": "object",
        "properties": {
          "attributeID": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "AwarenessQuiz": {
        "type": "object",
        "properties": {
          "aqId": {
            "type": "integer",
            "format": "int64"
          },
          "quizMode": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfAvailableLives": {
            "type": "integer",
            "format": "int32"
          },
          "timeForQuestion": {
            "type": "number",
            "format": "double"
          },
          "pointsAddedToScore": {
            "type": "integer",
            "format": "int32"
          },
          "pointsRemovedFromScore": {
            "type": "integer",
            "format": "int32"
          },
          "quizId": {
            "type": "string"
          },
          "questionSetDefinition": {
            "$ref": "#/components/schemas/QuestionSetDefinition"
          }
        }
      },
      "AwarenessQuizReport": {
        "type": "object",
        "properties": {
          "aqrId": {
            "type": "integer",
            "format": "int64"
          },
          "scoreOperator": {
            "type": "string"
          },
          "score": {
            "type": "integer",
            "format": "int32"
          },
          "numberLostLivesOperator": {
            "type": "string"
          },
          "numberLostLives": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CTTPDataFabricationModel": {
        "type": "object",
        "properties": {
          "cttpDataFabricationModelID": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "scenario": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Scenario"
            }
          },
          "network": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DFNetwork"
            }
          }
        }
      },
      "CTTPEmulationModel": {
        "type": "object",
        "properties": {
          "cttpEmulationModelID": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "trainingScenario": {
            "$ref": "#/components/schemas/TrainingScenario"
          },
          "scenario": {
            "$ref": "#/components/schemas/EmulationScenario"
          }
        },
        "xml": {
          "name": "emulation"
        }
      },
      "CTTPGamificationModel": {
        "type": "object",
        "properties": {
          "cttpGamificationModelID": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "games": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Game"
            }
          }
        }
      },
      "CTTPSimulationModel": {
        "type": "object",
        "properties": {
          "cttpSimulationModelID": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "tool": {
            "type": "string"
          },
          "template": {
            "type": "string"
          },
          "simulationDurationInMinutes": {
            "type": "number",
            "format": "float"
          },
          "executionSpeed": {
            "type": "number",
            "format": "float"
          },
          "randomSeed": {
            "type": "integer",
            "format": "int32"
          },
          "initialSimTimeAbs": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "deploymentMode": {
            "type": "string"
          },
          "rootComponent": {
            "$ref": "#/components/schemas/RootComponent"
          }
        }
      },
      "CidrType": {
        "type": "object",
        "properties": {
          "cidrtID": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "val": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ComponentContainer": {
        "type": "object",
        "properties": {
          "componentId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "attributes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            }
          },
          "subComponents": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentContainer"
            }
          }
        }
      },
      "ConnectionModeType": {
        "type": "object",
        "properties": {
          "cmtID": {
            "type": "integer",
            "format": "int64"
          },
          "port": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "connectionType": {
            "type": "string",
            "xml": {
              "name": "connectiontype",
              "attribute": true
            }
          }
        }
      },
      "CurrencyType": {
        "type": "object",
        "properties": {
          "currencyId": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "type": "string"
          },
          "currencyAbbrev": {
            "type": "string"
          }
        }
      },
      "CustomVM": {
        "type": "object",
        "properties": {
          "customVMID": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "os": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "linkAvailable": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "connectionModeType": {
            "$ref": "#/components/schemas/ConnectionModeType"
          },
          "ram": {
            "$ref": "#/components/schemas/EmulationRam"
          },
          "vcpus": {
            "$ref": "#/components/schemas/EmulationCpu"
          },
          "disk": {
            "$ref": "#/components/schemas/EmulationDisk"
          },
          "imageType": {
            "$ref": "#/components/schemas/ImageType"
          },
          "networks": {
            "uniqueItems": true,
            "type": "array",
            "xml": {
              "name": "Network"
            },
            "items": {
              "$ref": "#/components/schemas/NetworkType"
            }
          },
          "actualTraces": {
            "uniqueItems": true,
            "type": "array",
            "xml": {
              "name": "ActualTrace"
            },
            "items": {
              "$ref": "#/components/schemas/ActualTraceRef"
            }
          },
          "scripts": {
            "uniqueItems": true,
            "type": "array",
            "xml": {
              "name": "Scripts"
            },
            "items": {
              "$ref": "#/components/schemas/ScriptRef"
            }
          }
        }
      },
      "DFConnectionType": {
        "type": "object",
        "properties": {
          "dfConnectionID": {
            "type": "integer",
            "format": "int64"
          },
          "connection": {
            "type": "string"
          }
        }
      },
      "DFConstraint": {
        "type": "object",
        "properties": {
          "constraintID": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "constraint": {
            "type": "string"
          }
        }
      },
      "DFNetwork": {
        "type": "object",
        "properties": {
          "dfNetworkID": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "constraints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DFConstraint"
            }
          },
          "subnet": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subnet"
            }
          }
        }
      },
      "DifficultyLevel": {
        "type": "object",
        "properties": {
          "dlId": {
            "type": "integer",
            "format": "int64"
          },
          "minDifficulty": {
            "type": "integer",
            "format": "int32"
          },
          "maxDifficulty": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DurationType": {
        "type": "object",
        "properties": {
          "durationTypeID": {
            "type": "integer",
            "format": "int64"
          },
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "durationUnit": {
            "$ref": "#/components/schemas/DurationUnit"
          }
        }
      },
      "DurationUnit": {
        "type": "object",
        "properties": {
          "durationUnitID": {
            "type": "integer",
            "format": "int64"
          },
          "unit": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "EmulationCpu": {
        "type": "object",
        "properties": {
          "emulationCPUID": {
            "type": "integer",
            "format": "int64"
          },
          "val": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "EmulationDisk": {
        "type": "object",
        "properties": {
          "emulationDiskID": {
            "type": "integer",
            "format": "int64"
          },
          "val": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "EmulationNetwork": {
        "type": "object",
        "properties": {
          "emulationNetworkID": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "gateway": {
            "$ref": "#/components/schemas/GatewayType"
          },
          "cidr": {
            "$ref": "#/components/schemas/CidrType"
          },
          "isExternal": {
            "$ref": "#/components/schemas/IsExternalType"
          }
        }
      },
      "EmulationRam": {
        "type": "object",
        "properties": {
          "emulationRamID": {
            "type": "integer",
            "format": "int64"
          },
          "val": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "EmulationScenario": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "emulationScenarioId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "customVMs": {
            "uniqueItems": true,
            "type": "array",
            "xml": {
              "name": "customVM"
            },
            "items": {
              "$ref": "#/components/schemas/CustomVM"
            }
          },
          "networks": {
            "$ref": "#/components/schemas/Networks"
          },
          "actualTraces": {
            "$ref": "#/components/schemas/ActualTraces"
          },
          "scripts": {
            "$ref": "#/components/schemas/Scripts"
          }
        },
        "xml": {
          "name": "Scenario"
        }
      },
      "EvaluationReport": {
        "type": "object",
        "properties": {
          "evaluationReportID": {
            "type": "integer",
            "format": "int64"
          },
          "questionSet": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionSet"
            }
          }
        }
      },
      "ExecutionType": {
        "type": "object",
        "properties": {
          "execTID": {
            "type": "integer",
            "format": "int32"
          },
          "execTField": {
            "type": "string"
          },
          "execTValue": {
            "type": "string"
          },
          "execTSymbol": {
            "type": "string"
          }
        }
      },
      "ExpectedTrace": {
        "type": "object",
        "properties": {
          "expectedTraceID": {
            "type": "integer",
            "format": "int64"
          },
          "evaluationReport": {
            "$ref": "#/components/schemas/EvaluationReport"
          },
          "eventCaptors": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TPEventCaptor"
            }
          },
          "gamificationReport": {
            "$ref": "#/components/schemas/GamificationReport"
          },
          "awarenessQuizReport": {
            "$ref": "#/components/schemas/AwarenessQuizReport"
          }
        }
      },
      "FilterParameter": {
        "type": "object",
        "properties": {
          "fpId": {
            "type": "integer",
            "format": "int64"
          },
          "questionMetadataType": {
            "type": "string"
          },
          "questionMetadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionMetaData"
            }
          }
        }
      },
      "Game": {
        "type": "object",
        "properties": {
          "gameID": {
            "type": "integer",
            "format": "int64"
          },
          "gameType": {
            "$ref": "#/components/schemas/GameType"
          },
          "protects": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Protect"
            }
          },
          "awarenessQuiz": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AwarenessQuiz"
            }
          }
        }
      },
      "GameType": {
        "type": "object",
        "properties": {
          "gameTypeID": {
            "type": "integer",
            "format": "int64"
          },
          "game": {
            "type": "string"
          }
        }
      },
      "GamificationReport": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "scoreOperator": {
            "type": "string"
          },
          "score": {
            "type": "string"
          },
          "remainingTimeOperator": {
            "type": "string"
          },
          "remainingTime": {
            "type": "string"
          },
          "numberLostLivesOperator": {
            "type": "string"
          },
          "numberLostLives": {
            "type": "string"
          }
        }
      },
      "GatewayType": {
        "type": "object",
        "properties": {
          "gwtID": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "val": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "GoalType": {
        "type": "object",
        "properties": {
          "goalTypeID": {
            "type": "integer",
            "format": "int64"
          },
          "storyLine": {
            "type": "string"
          },
          "courseOfActions": {
            "type": "string"
          }
        }
      },
      "ImageType": {
        "type": "object",
        "properties": {
          "imgtID": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "val": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "username": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "password": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "IsExternalType": {
        "type": "object",
        "properties": {
          "isExternalTypeID": {
            "type": "integer",
            "format": "int64"
          },
          "val": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "LikelihoodType": {
        "type": "object",
        "properties": {
          "likelihoodID": {
            "type": "integer",
            "format": "int64"
          },
          "min": {
            "type": "number",
            "format": "double"
          },
          "max": {
            "type": "number",
            "format": "double"
          },
          "calculatedBy": {
            "type": "string"
          }
        }
      },
      "MonitoringAssessmentResult": {
        "type": "object",
        "properties": {
          "monitoringAssessmentResultID": {
            "type": "integer",
            "format": "int64"
          },
          "assessmentResult": {
            "$ref": "#/components/schemas/AssessmentResult"
          },
          "assessmentProfile": {
            "$ref": "#/components/schemas/AssessmentProfile"
          },
          "assessmentCriterion": {
            "$ref": "#/components/schemas/AssessmentCriterion"
          },
          "asset": {
            "$ref": "#/components/schemas/Asset"
          },
          "template": {
            "type": "string"
          },
          "result": {
            "type": "string"
          },
          "ifEvent": {
            "type": "string"
          },
          "ifEventTimestamp": {
            "type": "string",
            "format": "date-time"
          },
          "thenEvent": {
            "type": "string"
          },
          "thenEventTimestamp": {
            "type": "string",
            "format": "date-time"
          },
          "criterionDescription": {
            "type": "string"
          },
          "securityProperty": {
            "type": "string"
          },
          "likelihood": {
            "type": "integer",
            "format": "int32"
          },
          "if": {
            "type": "string"
          },
          "then": {
            "type": "string"
          }
        }
      },
      "NetworkType": {
        "type": "object",
        "properties": {
          "netTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "idref": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "fixedip": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "Networks": {
        "type": "object",
        "properties": {
          "networksID": {
            "type": "integer",
            "format": "int64"
          },
          "network": {
            "uniqueItems": true,
            "type": "array",
            "xml": {
              "name": "Network"
            },
            "items": {
              "$ref": "#/components/schemas/EmulationNetwork"
            }
          }
        }
      },
      "Node": {
        "type": "object",
        "properties": {
          "nodeID": {
            "type": "integer",
            "format": "int64"
          },
          "node": {
            "type": "string"
          },
          "application": {
            "type": "string"
          },
          "function": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "constraints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DFConstraint"
            }
          }
        }
      },
      "Organisation": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "organisationID": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "activeFrom": {
            "type": "string",
            "format": "date-time"
          },
          "activeTo": {
            "type": "string",
            "format": "date-time"
          },
          "organisationType": {
            "$ref": "#/components/schemas/OrganisationType"
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "OrganisationType": {
        "type": "object",
        "properties": {
          "orgID": {
            "type": "integer",
            "format": "int32"
          },
          "orgField": {
            "type": "string"
          },
          "orgValue": {
            "type": "string"
          },
          "orgSymbol": {
            "type": "string"
          }
        }
      },
      "PeriodUnitType": {
        "type": "object",
        "properties": {
          "perUID": {
            "type": "integer",
            "format": "int32"
          },
          "perUField": {
            "type": "string"
          },
          "perUValue": {
            "type": "string"
          },
          "perUSymbol": {
            "type": "string"
          }
        }
      },
      "ProgrammeType": {
        "type": "object",
        "properties": {
          "ptId": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "Protect": {
        "type": "object",
        "properties": {
          "protectID": {
            "type": "integer",
            "format": "int64"
          },
          "difficultyLevel": {
            "type": "integer",
            "format": "int32"
          },
          "gameTime": {
            "type": "integer",
            "format": "int32"
          },
          "cardDeckID": {
            "type": "string"
          },
          "defaultValue": {
            "type": "boolean"
          },
          "specialPractice": {
            "type": "boolean"
          }
        }
      },
      "QuestionMetaData": {
        "type": "object",
        "properties": {
          "qmdId": {
            "type": "integer",
            "format": "int64"
          },
          "metadata": {
            "type": "string"
          },
          "defaultValue": {
            "type": "boolean"
          }
        }
      },
      "QuestionSet": {
        "type": "object",
        "properties": {
          "questionSetID": {
            "type": "integer",
            "format": "int64"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "answers": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Answers"
            }
          },
          "correctOption": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Answers"
            }
          },
          "successScore": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "QuestionSetDefinition": {
        "type": "object",
        "properties": {
          "qsdId": {
            "type": "integer",
            "format": "int64"
          },
          "numberOfQuestions": {
            "type": "integer",
            "format": "int32"
          },
          "difficultyLevel": {
            "$ref": "#/components/schemas/DifficultyLevel"
          },
          "quizTopics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuizTopic"
            }
          }
        }
      },
      "QuizTopic": {
        "type": "object",
        "properties": {
          "qtId": {
            "type": "integer",
            "format": "int64"
          },
          "filterParameter": {
            "$ref": "#/components/schemas/FilterParameter"
          }
        }
      },
      "RepeatEvery": {
        "type": "object",
        "properties": {
          "periodID": {
            "type": "integer",
            "format": "int64"
          },
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "periodUnitType": {
            "$ref": "#/components/schemas/PeriodUnitType"
          }
        }
      },
      "RootComponent": {
        "type": "object",
        "properties": {
          "componentId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "attributes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            }
          },
          "subComponents": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentContainer"
            }
          }
        }
      },
      "Scenario": {
        "type": "object",
        "properties": {
          "scenarioID": {
            "type": "integer",
            "format": "int64"
          },
          "nodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Node"
            }
          }
        }
      },
      "ScenarioActorType": {
        "type": "object",
        "properties": {
          "satId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ScreenViewType": {
        "type": "object",
        "properties": {
          "screenViewTypeID": {
            "type": "integer",
            "format": "int64"
          },
          "screenNumber": {
            "type": "integer",
            "format": "int32"
          },
          "executionTool": {
            "$ref": "#/components/schemas/ToolType"
          },
          "description": {
            "type": "string"
          },
          "hint": {
            "type": "string"
          },
          "hintImpact": {
            "type": "number",
            "format": "double"
          },
          "traceFollowSequence": {
            "type": "boolean"
          },
          "maxAllowedTime": {
            "type": "integer",
            "format": "int32"
          },
          "maxAllowedTimeExceededPenalty": {
            "type": "integer",
            "format": "int32"
          },
          "visible": {
            "type": "boolean"
          },
          "targetedRole": {
            "$ref": "#/components/schemas/ScenarioActorType"
          },
          "customVMNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "expectedTraces": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpectedTrace"
            }
          }
        }
      },
      "Script": {
        "type": "object",
        "properties": {
          "scriptID": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "body": {
            "type": "string"
          }
        }
      },
      "ScriptRef": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "idref": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "Scripts": {
        "type": "object",
        "properties": {
          "scriptsID": {
            "type": "integer",
            "format": "int64"
          },
          "script": {
            "uniqueItems": true,
            "type": "array",
            "xml": {
              "name": "Script"
            },
            "items": {
              "$ref": "#/components/schemas/Script"
            }
          }
        }
      },
      "Subnet": {
        "type": "object",
        "properties": {
          "subnetID": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "stereotype": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "subnet": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subnet"
            }
          },
          "constraints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DFConstraint"
            }
          },
          "connections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DFConnectionType"
            }
          },
          "apps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Application"
            }
          }
        }
      },
      "TPEventCaptor": {
        "type": "object",
        "properties": {
          "tpEventCaptorID": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "score": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "optional": {
            "type": "boolean"
          },
          "endTraining": {
            "type": "boolean"
          }
        }
      },
      "ToolType": {
        "type": "object",
        "properties": {
          "toolTypeID": {
            "type": "integer",
            "format": "int64"
          },
          "tool": {
            "type": "string"
          }
        }
      },
      "TrainingDeliveryParameterModel": {
        "type": "object",
        "properties": {
          "tdpId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "goal": {
            "$ref": "#/components/schemas/GoalType"
          },
          "difficulty": {
            "type": "integer",
            "format": "int32"
          },
          "bonus": {
            "type": "integer",
            "format": "int32"
          },
          "penalty": {
            "type": "integer",
            "format": "int32"
          },
          "followSequence": {
            "type": "boolean"
          },
          "linkedVulnerabilities": {
            "type": "string"
          },
          "linkedWeaknesses": {
            "type": "string"
          },
          "prerequisites": {
            "type": "string"
          },
          "mitigationControls": {
            "type": "string"
          },
          "legalContext": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "durationType": {
            "$ref": "#/components/schemas/DurationType"
          },
          "programmeType": {
            "$ref": "#/components/schemas/ProgrammeType"
          },
          "trainingStandards": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrainingStandardType"
            }
          },
          "trainingScenario": {
            "$ref": "#/components/schemas/TrainingScenario"
          },
          "actionTypes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypesOfActionType"
            }
          },
          "actors": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScenarioActorType"
            }
          },
          "trainingProgrammeExecutions": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrainingProgrammeExecution"
            }
          }
        }
      },
      "TrainingProgrammeExecution": {
        "type": "object",
        "properties": {
          "trainingProgrammeExecutionID": {
            "type": "integer",
            "format": "int64"
          },
          "totalScreens": {
            "type": "integer",
            "format": "int32"
          },
          "executionPriority": {
            "type": "integer",
            "format": "int32"
          },
          "difficulty": {
            "type": "integer",
            "format": "int32"
          },
          "screens": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScreenViewType"
            }
          },
          "executionDuration": {
            "$ref": "#/components/schemas/DurationType"
          }
        }
      },
      "TrainingScenario": {
        "type": "object",
        "properties": {
          "tsId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "emulationModels": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CTTPEmulationModel"
            }
          },
          "simulationModels": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CTTPSimulationModel"
            }
          },
          "gamificationModels": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CTTPGamificationModel"
            }
          },
          "dataFabricationModels": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CTTPDataFabricationModel"
            }
          },
          "trainingDeliveryParameterModels": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrainingDeliveryParameterModel"
            }
          },
          "organisations": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Organisation"
            }
          }
        }
      },
      "TrainingStandardType": {
        "type": "object",
        "properties": {
          "tstId": {
            "type": "integer",
            "format": "int64"
          },
          "sdo": {
            "type": "string"
          },
          "standard": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          }
        }
      },
      "TypesOfActionType": {
        "type": "object",
        "properties": {
          "actionTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "frameworkId": {
            "type": "integer",
            "format": "int32"
          },
          "framework": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "MonitoringAssessmentResultsFields": {
        "type": "object",
        "properties": {
          "monitoringAssessmentResultID": {
            "type": "integer",
            "format": "int64"
          },
          "assessmentModelExecutionID": {
            "type": "integer",
            "format": "int64"
          },
          "assessmentType": {
            "type": "string"
          },
          "assessmentProfileID": {
            "type": "integer",
            "format": "int64"
          },
          "assessmentCriterionID": {
            "type": "integer",
            "format": "int64"
          },
          "assessmentCriterionDescription": {
            "type": "string"
          },
          "assetID": {
            "type": "integer",
            "format": "int64"
          },
          "assetName": {
            "type": "string"
          },
          "securityProperty": {
            "type": "string"
          },
          "likelihood": {
            "type": "integer",
            "format": "int32"
          },
          "initialDetection": {
            "type": "string",
            "format": "date-time"
          },
          "validUntil": {
            "type": "string",
            "format": "date-time"
          },
          "lastChecked": {
            "type": "string",
            "format": "date-time"
          },
          "template": {
            "type": "string"
          },
          "result": {
            "type": "string"
          },
          "ifEvent": {
            "type": "string"
          },
          "ifEventTimestamp": {
            "type": "string",
            "format": "date-time"
          },
          "thenEvent": {
            "type": "string"
          },
          "thenEventTimestamp": {
            "type": "string",
            "format": "date-time"
          },
          "assessmentResultID": {
            "type": "integer",
            "format": "int64"
          },
          "likelihoodType": {
            "$ref": "#/components/schemas/LikelihoodType"
          },
          "normalised": {
            "type": "integer",
            "format": "int32"
          },
          "if": {
            "type": "string"
          },
          "then": {
            "type": "string"
          }
        }
      },
      "Assets": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "assetId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ExecutionAssessmentJoin": {
        "type": "object",
        "properties": {
          "executionassessmentjoinID": {
            "type": "integer",
            "format": "int32"
          },
          "executionType": {
            "$ref": "#/components/schemas/ExecutionType"
          },
          "assessmentmodeltypeID": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SecurityAssessmentAggregated": {
        "type": "object",
        "properties": {
          "tableID": {
            "type": "integer",
            "format": "int64"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "tableName": {
            "type": "string"
          }
        }
      },
      "AssetType": {
        "type": "object",
        "properties": {
          "atID": {
            "type": "integer",
            "format": "int32"
          },
          "atField": {
            "type": "string"
          },
          "atValue": {
            "type": "string"
          },
          "atSymbol": {
            "type": "string"
          },
          "atValues": {
            "type": "string"
          }
        }
      },
      "AssetAggregated": {
        "type": "object",
        "properties": {
          "atValues": {
            "type": "string"
          },
          "tableName": {
            "type": "string"
          },
          "total": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "AssetContainmentJoin": {
        "type": "object",
        "properties": {
          "acID": {
            "type": "integer",
            "format": "int64"
          },
          "containedasset": {
            "$ref": "#/components/schemas/Asset"
          },
          "asset": {
            "$ref": "#/components/schemas/Asset"
          }
        }
      },
      "AssetControlsJoin": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "controlled": {
            "$ref": "#/components/schemas/Asset"
          },
          "asset": {
            "$ref": "#/components/schemas/Asset"
          }
        }
      },
      "AssetInvolvesJoin": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "involved": {
            "$ref": "#/components/schemas/Asset"
          },
          "asset": {
            "$ref": "#/components/schemas/Asset"
          }
        }
      },
      "AssetProcessesJoin": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "processed": {
            "$ref": "#/components/schemas/Asset"
          },
          "asset": {
            "$ref": "#/components/schemas/Asset"
          }
        }
      },
      "AssetStoresJoin": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "stored": {
            "$ref": "#/components/schemas/Asset"
          },
          "asset": {
            "$ref": "#/components/schemas/Asset"
          }
        }
      },
      "AssetTransmitsJoin": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "transmitted": {
            "$ref": "#/components/schemas/Asset"
          },
          "asset": {
            "$ref": "#/components/schemas/Asset"
          }
        }
      },
      "Data": {
        "required": [
          "assetName"
        ],
        "type": "object",
        "properties": {
          "dataID": {
            "type": "integer",
            "format": "int64"
          },
          "assetName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "activeFrom": {
            "type": "string",
            "format": "date-time"
          },
          "activeTo": {
            "type": "string",
            "format": "date-time"
          },
          "assetValue": {
            "type": "number",
            "format": "double"
          },
          "category": {
            "$ref": "#/components/schemas/DataType"
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "asset": {
            "$ref": "#/components/schemas/Asset"
          },
          "status": {
            "$ref": "#/components/schemas/StatusType"
          },
          "trainingScenario": {
            "$ref": "#/components/schemas/TrainingScenario"
          },
          "owners": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Person"
            }
          },
          "dataStateTypes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataStateType"
            }
          },
          "gdprProcessors": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GDPRDataProcessor"
            }
          },
          "contains": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetContainmentJoin"
            }
          },
          "assetContains": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetContainmentJoin"
            }
          },
          "controls": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetControlsJoin"
            }
          },
          "getaControls": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetControlsJoin"
            }
          },
          "processedBy": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetProcessesJoin"
            }
          },
          "getaProcessedBy": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetProcessesJoin"
            }
          },
          "storedBy": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetStoresJoin"
            }
          },
          "getaStoredBy": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetStoresJoin"
            }
          },
          "transmittedBy": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetTransmitsJoin"
            }
          },
          "getaTransmittedBy": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetTransmitsJoin"
            }
          }
        }
      },
      "DataStateType": {
        "type": "object",
        "properties": {
          "stateID": {
            "type": "integer",
            "format": "int32"
          },
          "stateField": {
            "type": "string"
          },
          "stateValue": {
            "type": "string"
          },
          "stateSymbol": {
            "type": "string"
          }
        }
      },
      "DataType": {
        "type": "object",
        "properties": {
          "dataTID": {
            "type": "integer",
            "format": "int32"
          },
          "dataTField": {
            "type": "string"
          },
          "dataTValue": {
            "type": "string"
          },
          "dataTSymbol": {
            "type": "string"
          }
        }
      },
      "GDPRDataProcessor": {
        "type": "object",
        "properties": {
          "gdprdpID": {
            "type": "integer",
            "format": "int64"
          },
          "person": {
            "$ref": "#/components/schemas/Person"
          },
          "gdprroleID": {
            "type": "integer",
            "format": "int32"
          },
          "gdpractiveFrom": {
            "type": "string",
            "format": "date-time"
          },
          "gdpractiveTo": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "$ref": "#/components/schemas/Data"
          }
        }
      },
      "Person": {
        "required": [
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "personID": {
            "type": "integer",
            "format": "int64"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "activeFrom": {
            "type": "string",
            "format": "date-time"
          },
          "activeTo": {
            "type": "string",
            "format": "date-time"
          },
          "assetValue": {
            "type": "number",
            "format": "double"
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "asset": {
            "$ref": "#/components/schemas/Asset"
          },
          "status": {
            "$ref": "#/components/schemas/StatusType"
          },
          "trainingScenario": {
            "$ref": "#/components/schemas/TrainingScenario"
          },
          "personRoles": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonRoleType"
            }
          },
          "creatorID": {
            "type": "integer",
            "format": "int64"
          },
          "contains": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetContainmentJoin"
            }
          },
          "assetContains": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetContainmentJoin"
            }
          },
          "controls": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetControlsJoin"
            }
          },
          "getaControls": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetControlsJoin"
            }
          },
          "processes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetProcessesJoin"
            }
          },
          "getaProcesses": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetProcessesJoin"
            }
          },
          "stores": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetStoresJoin"
            }
          },
          "getaStores": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetStoresJoin"
            }
          },
          "transmits": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetTransmitsJoin"
            }
          },
          "getaTransmits": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetTransmitsJoin"
            }
          },
          "involvedIn": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetInvolvesJoin"
            }
          },
          "isInvolved": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetInvolvesJoin"
            }
          }
        }
      },
      "PersonRoleType": {
        "type": "object",
        "properties": {
          "personroleID": {
            "type": "integer",
            "format": "int32"
          },
          "personRoleField": {
            "type": "string"
          },
          "personRoleValue": {
            "type": "string"
          },
          "personRoleSymbol": {
            "type": "string"
          }
        }
      },
      "DataAction": {
        "type": "object",
        "properties": {
          "dataactionID": {
            "type": "integer",
            "format": "int32"
          },
          "assetactionName": {
            "type": "string"
          },
          "actionName": {
            "type": "string"
          }
        }
      },
      "GDPRRoleType": {
        "type": "object",
        "properties": {
          "gdprroleID": {
            "type": "integer",
            "format": "int32"
          },
          "roleName": {
            "type": "string"
          }
        }
      },
      "DFMainView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EmulationMainView": {
        "type": "object",
        "properties": {
          "emulationId": {
            "type": "integer",
            "format": "int64"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "EmulationModelsPerOperatingSystem": {
        "type": "object",
        "properties": {
          "operatingSystem": {
            "type": "string"
          },
          "total": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "AwarenessQuizMode": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "mode": {
            "type": "string"
          }
        }
      },
      "GamificationPerGameType": {
        "type": "object",
        "properties": {
          "gameType": {
            "type": "string"
          },
          "total": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "GamificationMainView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ProtectDifficultyLevel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "level": {
            "type": "string"
          }
        }
      },
      "CardDeckIdentifier": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "cardIdentifier": {
            "type": "string"
          }
        }
      },
      "MetadataValue": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "mdtid": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "string"
          },
          "defaultValue": {
            "type": "boolean"
          }
        }
      },
      "MetadataType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "extensible": {
            "type": "boolean"
          },
          "type": {
            "type": "string"
          },
          "optional": {
            "type": "boolean"
          }
        }
      },
      "AssetDeployJoin": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "deployed": {
            "$ref": "#/components/schemas/Asset"
          },
          "asset": {
            "$ref": "#/components/schemas/Asset"
          }
        }
      },
      "BiosType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "manufacturer": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "secureBootEnabled": {
            "type": "boolean"
          }
        }
      },
      "CPUModule": {
        "required": [
          "manufacturer",
          "name",
          "numberOfCores",
          "numberOfThreads"
        ],
        "type": "object",
        "properties": {
          "cpuID": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "manufacturer": {
            "type": "string"
          },
          "numberOfCores": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfThreads": {
            "type": "integer",
            "format": "int32"
          },
          "baseClock": {
            "type": "number",
            "format": "double"
          },
          "maxBoostClock": {
            "type": "number",
            "format": "double"
          },
          "cpuPackage": {
            "type": "string"
          },
          "cache": {
            "type": "integer",
            "format": "int32"
          },
          "tdp": {
            "type": "integer",
            "format": "int32"
          },
          "hasIntegratedGraphics": {
            "type": "boolean"
          }
        }
      },
      "ConnectionType": {
        "type": "object",
        "properties": {
          "connectionTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "ctField": {
            "type": "string"
          },
          "ctValue": {
            "type": "string"
          },
          "ctSymbol": {
            "type": "string"
          }
        }
      },
      "DiskModule": {
        "required": [
          "size"
        ],
        "type": "object",
        "properties": {
          "diskID": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "manufacturer": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "compressed": {
            "type": "boolean"
          },
          "model": {
            "type": "string"
          },
          "fileSystemType": {
            "$ref": "#/components/schemas/FileSystemType"
          },
          "driveType": {
            "$ref": "#/components/schemas/DriveType"
          }
        }
      },
      "DriveType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "dtField": {
            "type": "string"
          },
          "dtValue": {
            "type": "string"
          },
          "dtSymbol": {
            "type": "string"
          }
        }
      },
      "FileSystemType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "fstField": {
            "type": "string"
          },
          "fstValue": {
            "type": "string"
          },
          "fstSymbol": {
            "type": "string"
          }
        }
      },
      "GpuMemoryType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "gpumtField": {
            "type": "string"
          },
          "gpumtValue": {
            "type": "string"
          },
          "gpumtSymbol": {
            "type": "string"
          }
        }
      },
      "HardwareAsset": {
        "required": [
          "assetName",
          "assetVendor"
        ],
        "type": "object",
        "properties": {
          "hardwareId": {
            "type": "integer",
            "format": "int64"
          },
          "assetName": {
            "type": "string"
          },
          "assetVendor": {
            "type": "string"
          },
          "assetVersion": {
            "type": "string"
          },
          "emulated": {
            "type": "boolean"
          },
          "activeFrom": {
            "type": "string",
            "format": "date-time"
          },
          "activeTo": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "assetValue": {
            "type": "number",
            "format": "double"
          },
          "hardwareType": {
            "$ref": "#/components/schemas/HardwareType"
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "asset": {
            "$ref": "#/components/schemas/Asset"
          },
          "status": {
            "$ref": "#/components/schemas/StatusType"
          },
          "trainingScenario": {
            "$ref": "#/components/schemas/TrainingScenario"
          },
          "memoryModules": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemoryModule"
            }
          },
          "cpuModules": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CPUModule"
            }
          },
          "diskModules": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiskModule"
            }
          },
          "portModules": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PortModule"
            }
          },
          "networkAdapters": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NetworkAdapterModule"
            }
          },
          "videoAdapterModules": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VideoAdapterModule"
            }
          },
          "motherboardModules": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MotherboardModule"
            }
          },
          "powerSupplyModules": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PowerSupplyModule"
            }
          },
          "owners": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Person"
            }
          },
          "creatorID": {
            "type": "integer",
            "format": "int64"
          },
          "contains": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetContainmentJoin"
            }
          },
          "assetContains": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetContainmentJoin"
            }
          },
          "controls": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetControlsJoin"
            }
          },
          "getaControls": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetControlsJoin"
            }
          },
          "processes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetProcessesJoin"
            }
          },
          "getaProcesses": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetProcessesJoin"
            }
          },
          "stores": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetStoresJoin"
            }
          },
          "getaStores": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetStoresJoin"
            }
          },
          "transmits": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetTransmitsJoin"
            }
          },
          "getaTransmits": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetTransmitsJoin"
            }
          },
          "deploys": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetDeployJoin"
            }
          },
          "getaDeploys": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetDeployJoin"
            }
          }
        }
      },
      "HardwareType": {
        "type": "object",
        "properties": {
          "hardwaretypeID": {
            "type": "integer",
            "format": "int32"
          },
          "htField": {
            "type": "string"
          },
          "htValue": {
            "type": "string"
          },
          "htSymbol": {
            "type": "string"
          }
        }
      },
      "MemoryModule": {
        "type": "object",
        "properties": {
          "memoryID": {
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "eccEnabled": {
            "type": "boolean"
          },
          "clock": {
            "type": "integer",
            "format": "int32"
          },
          "dramManufacturer": {
            "type": "string"
          },
          "manufacturer": {
            "type": "string"
          },
          "memoryModuleType": {
            "$ref": "#/components/schemas/MemoryModuleType"
          }
        }
      },
      "MemoryModuleType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "mmtField": {
            "type": "string"
          },
          "mmtValue": {
            "type": "string"
          },
          "mmtSymbol": {
            "type": "string"
          }
        }
      },
      "MotherboardModule": {
        "required": [
          "manufacturer"
        ],
        "type": "object",
        "properties": {
          "motherboardID": {
            "type": "integer",
            "format": "int64"
          },
          "manufacturer": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "chipset": {
            "type": "string"
          },
          "biosType": {
            "$ref": "#/components/schemas/BiosType"
          }
        }
      },
      "NetworkAdapterModule": {
        "type": "object",
        "properties": {
          "networkAdapterID": {
            "type": "integer",
            "format": "int64"
          },
          "mac": {
            "type": "string"
          },
          "connectionType": {
            "$ref": "#/components/schemas/ConnectionType"
          },
          "networkConfigurationTypes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NetworkConfigurationType"
            }
          }
        }
      },
      "NetworkConfigurationType": {
        "required": [
          "ipv4"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "ipv4": {
            "type": "string"
          },
          "gateway": {
            "type": "string"
          },
          "ipv6": {
            "type": "string"
          },
          "dhcpServer": {
            "type": "string"
          },
          "dnsServer": {
            "type": "string"
          },
          "subnetMask": {
            "type": "string"
          },
          "cidr": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PeripheralType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "ptField": {
            "type": "string"
          },
          "ptValue": {
            "type": "string"
          },
          "ptSymbol": {
            "type": "string"
          }
        }
      },
      "PortModule": {
        "type": "object",
        "properties": {
          "portID": {
            "type": "integer",
            "format": "int64"
          },
          "usbTypes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UsbType"
            }
          },
          "serialPortTypes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SerialPortType"
            }
          }
        }
      },
      "PowerSupplyModule": {
        "required": [
          "manufacturer"
        ],
        "type": "object",
        "properties": {
          "powerSupplyID": {
            "type": "integer",
            "format": "int64"
          },
          "manufacturer": {
            "type": "string"
          },
          "modelName": {
            "type": "string"
          },
          "maxDCOutput": {
            "type": "integer",
            "format": "int32"
          },
          "efficiency": {
            "type": "string"
          },
          "hasOverVoltageProtection": {
            "type": "boolean"
          },
          "hasUnderVoltageProtection": {
            "type": "boolean"
          },
          "hasOverpowerProtection": {
            "type": "boolean"
          },
          "hasOverTemperatureProtection": {
            "type": "boolean"
          },
          "hasShortCircuitProtection": {
            "type": "boolean"
          },
          "hasSurgeProtection": {
            "type": "boolean"
          }
        }
      },
      "SerialPortType": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "alwaysConnected": {
            "type": "boolean"
          }
        }
      },
      "UsbType": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "alwaysConnected": {
            "type": "boolean"
          },
          "peripheralType": {
            "$ref": "#/components/schemas/PeripheralType"
          }
        }
      },
      "VideoAdapterModule": {
        "required": [
          "boardManufacturer",
          "name"
        ],
        "type": "object",
        "properties": {
          "videoAdapterID": {
            "type": "integer",
            "format": "int64"
          },
          "boardManufacturer": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "codeName": {
            "type": "string"
          },
          "technology": {
            "type": "string"
          },
          "coreClock": {
            "type": "integer",
            "format": "int32"
          },
          "memoryClock": {
            "type": "integer",
            "format": "int32"
          },
          "memorySize": {
            "type": "integer",
            "format": "int32"
          },
          "gpuMemoryType": {
            "$ref": "#/components/schemas/GpuMemoryType"
          },
          "vendor": {
            "type": "string"
          },
          "hasSLICapability": {
            "type": "boolean"
          },
          "external": {
            "type": "boolean"
          }
        }
      },
      "ModelsPerType": {
        "type": "object",
        "properties": {
          "model": {
            "type": "string"
          },
          "total": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "OrganisationsPerType": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "total": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "AssetDependsJoin": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "depended": {
            "$ref": "#/components/schemas/Asset"
          },
          "asset": {
            "$ref": "#/components/schemas/Asset"
          }
        }
      },
      "AssetSupportsJoin": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "supported": {
            "$ref": "#/components/schemas/Asset"
          },
          "asset": {
            "$ref": "#/components/schemas/Asset"
          }
        }
      },
      "Process": {
        "required": [
          "assetName"
        ],
        "type": "object",
        "properties": {
          "processID": {
            "type": "integer",
            "format": "int64"
          },
          "assetName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "activeFrom": {
            "type": "string",
            "format": "date-time"
          },
          "activeTo": {
            "type": "string",
            "format": "date-time"
          },
          "assetValue": {
            "type": "number",
            "format": "double"
          },
          "asset": {
            "$ref": "#/components/schemas/Asset"
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "status": {
            "$ref": "#/components/schemas/StatusType"
          },
          "trainingScenario": {
            "$ref": "#/components/schemas/TrainingScenario"
          },
          "owners": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Person"
            }
          },
          "creatorID": {
            "type": "integer",
            "format": "int64"
          },
          "contains": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetContainmentJoin"
            }
          },
          "assetContains": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetContainmentJoin"
            }
          },
          "controls": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetControlsJoin"
            }
          },
          "getaControls": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetControlsJoin"
            }
          },
          "processes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetProcessesJoin"
            }
          },
          "getaProcesses": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetProcessesJoin"
            }
          },
          "dependsOn": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetDependsJoin"
            }
          },
          "isDepended": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetDependsJoin"
            }
          },
          "involves": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetInvolvesJoin"
            }
          },
          "getaInvolves": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetInvolvesJoin"
            }
          },
          "stores": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetStoresJoin"
            }
          },
          "getaStores": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetStoresJoin"
            }
          },
          "transmits": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetTransmitsJoin"
            }
          },
          "getaTransmits": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetTransmitsJoin"
            }
          },
          "isSupportedBy": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetSupportsJoin"
            }
          },
          "supportedBy": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetSupportsJoin"
            }
          }
        }
      },
      "SimulationMainView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SimulationPerDeploymentMode": {
        "type": "object",
        "properties": {
          "deploymentMode": {
            "type": "string"
          },
          "total": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SoftwareAsset": {
        "required": [
          "assetName",
          "assetVendor"
        ],
        "type": "object",
        "properties": {
          "saID": {
            "type": "integer",
            "format": "int64"
          },
          "assetName": {
            "type": "string"
          },
          "assetVendor": {
            "type": "string"
          },
          "assetVersion": {
            "type": "string"
          },
          "assetValue": {
            "type": "number",
            "format": "double"
          },
          "activeFrom": {
            "type": "string",
            "format": "date-time"
          },
          "activeTo": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "softwaretype": {
            "$ref": "#/components/schemas/Softwaretype"
          },
          "asset": {
            "$ref": "#/components/schemas/Asset"
          },
          "softwareKind": {
            "$ref": "#/components/schemas/SoftwareKindType"
          },
          "status": {
            "$ref": "#/components/schemas/StatusType"
          },
          "trainingScenario": {
            "$ref": "#/components/schemas/TrainingScenario"
          },
          "owners": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Person"
            }
          },
          "creatorID": {
            "type": "integer",
            "format": "int64"
          },
          "contains": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetContainmentJoin"
            }
          },
          "assetContains": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetContainmentJoin"
            }
          },
          "controls": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetControlsJoin"
            }
          },
          "getaControls": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetControlsJoin"
            }
          },
          "processes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetProcessesJoin"
            }
          },
          "getaProcesses": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetProcessesJoin"
            }
          },
          "stores": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetStoresJoin"
            }
          },
          "getaStores": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetStoresJoin"
            }
          },
          "transmits": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetTransmitsJoin"
            }
          },
          "getaTransmits": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetTransmitsJoin"
            }
          },
          "isDeployedOn": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetDeployJoin"
            }
          },
          "deployedOn": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetDeployJoin"
            }
          },
          "supports": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetSupportsJoin"
            }
          },
          "getaSupports": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetSupportsJoin"
            }
          }
        }
      },
      "SoftwareKindType": {
        "type": "object",
        "properties": {
          "kindID": {
            "type": "integer",
            "format": "int32"
          },
          "kindsymbol": {
            "type": "string"
          },
          "kindfield": {
            "type": "string"
          },
          "kindvalue": {
            "type": "string"
          }
        }
      },
      "Softwaretype": {
        "type": "object",
        "properties": {
          "stypeId": {
            "type": "integer",
            "format": "int32"
          },
          "softField": {
            "type": "string"
          },
          "softValue": {
            "type": "string"
          },
          "softSymbol": {
            "type": "string"
          }
        }
      },
      "EducationalMaterial": {
        "type": "object",
        "properties": {
          "emId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "difficulty": {
            "$ref": "#/components/schemas/OfferingLevelType"
          },
          "evaluationReport": {
            "$ref": "#/components/schemas/EvaluationReport"
          }
        }
      },
      "OfferingLevelType": {
        "type": "object",
        "properties": {
          "oltId": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "TrainingProgrammeContent": {
        "type": "object",
        "properties": {
          "tpcId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "offeringLevelType": {
            "$ref": "#/components/schemas/OfferingLevelType"
          },
          "duration": {
            "$ref": "#/components/schemas/DurationType"
          },
          "trainingScenario": {
            "$ref": "#/components/schemas/TrainingScenario"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "educationalMaterials": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EducationalMaterial"
            }
          }
        }
      },
      "TPCMainView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "offeringLevelType": {
            "$ref": "#/components/schemas/OfferingLevelType"
          },
          "durationType": {
            "$ref": "#/components/schemas/DurationType"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TrainingProgrammeContentPerOfferingLevel": {
        "type": "object",
        "properties": {
          "offeringLevel": {
            "type": "string"
          },
          "total": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "EducationalMaterialsPerOfferingLevel": {
        "type": "object",
        "properties": {
          "offeringLevel": {
            "type": "string"
          },
          "total": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TrainingDeliveryRoleType": {
        "type": "object",
        "properties": {
          "tdrId": {
            "type": "integer",
            "format": "int32"
          },
          "frameworkId": {
            "type": "integer",
            "format": "int32"
          },
          "framework": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "specialtyArea": {
            "type": "string"
          },
          "workRole": {
            "type": "string"
          },
          "workRoleDescription": {
            "type": "string"
          }
        }
      },
      "ActionType": {
        "type": "object",
        "properties": {
          "actionTypeId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TDPPerProgrammeType": {
        "type": "object",
        "properties": {
          "programmeType": {
            "type": "string"
          },
          "total": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PurposeType": {
        "type": "object",
        "properties": {
          "ptId": {
            "type": "integer",
            "format": "int32"
          },
          "getpId": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "TargetedUserType": {
        "type": "object",
        "properties": {
          "tutId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "TraineeProfile": {
        "type": "object",
        "properties": {
          "profileId": {
            "type": "integer",
            "format": "int64"
          },
          "educationalScope": {
            "type": "string"
          },
          "prerequisites": {
            "type": "string"
          },
          "trainingSchemeMap": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrainingSchemeType"
            }
          },
          "targetedRoles": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrainingDeliveryRoleType"
            }
          }
        }
      },
      "TrainingProgramme": {
        "type": "object",
        "properties": {
          "trainingProgrammeID": {
            "type": "integer",
            "format": "int64"
          },
          "introduction": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "durationType": {
            "$ref": "#/components/schemas/DurationType"
          },
          "traineeProfile": {
            "$ref": "#/components/schemas/TraineeProfile"
          },
          "offeringLevelType": {
            "$ref": "#/components/schemas/OfferingLevelType"
          },
          "purposes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurposeType"
            }
          },
          "verticalSectors": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VerticalSectorType"
            }
          },
          "targetedUsers": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TargetedUserType"
            }
          },
          "contents": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrainingProgrammeContent"
            }
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "organisations": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Organisation"
            }
          }
        }
      },
      "TrainingSchemeType": {
        "type": "object",
        "properties": {
          "schemeId": {
            "type": "integer",
            "format": "int64"
          },
          "vendor": {
            "type": "string"
          },
          "scheme": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          }
        }
      },
      "VerticalSectorType": {
        "type": "object",
        "properties": {
          "vsId": {
            "type": "integer",
            "format": "int32"
          },
          "getvId": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "TrainingRoleType": {
        "type": "object",
        "properties": {
          "trtId": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "TPMainView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "offeringLevelType": {
            "$ref": "#/components/schemas/OfferingLevelType"
          },
          "durationType": {
            "$ref": "#/components/schemas/DurationType"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TrainingProgrammeAggregateInfo": {
        "type": "object",
        "properties": {
          "verticalSector": {
            "type": "string"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TrainingProgrammesPerOfferingLevel": {
        "type": "object",
        "properties": {
          "offeringLevel": {
            "type": "string"
          },
          "total": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TrainingScenarioMainView": {
        "type": "object",
        "properties": {
          "tsId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Questionnaire": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "userProfile": {
            "$ref": "#/components/schemas/UserProfile"
          },
          "questions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Questions"
            }
          }
        }
      },
      "Questions": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "getqId": {
            "type": "integer",
            "format": "int32"
          },
          "question": {
            "type": "string"
          },
          "answer": {
            "type": "string"
          },
          "comments": {
            "type": "string"
          }
        }
      },
      "UserProfile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "role": {
            "type": "string"
          },
          "sector": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearer-jwt": {
        "type": "http",
        "name": "Authorization",
        "in": "header",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}